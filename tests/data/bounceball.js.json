{
    "type": "Program",
    "body": [
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "canvas"
                    },
                    "init": {
                        "type": "CallExpression",
                        "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                                "type": "Identifier",
                                "name": "document"
                            },
                            "property": {
                                "type": "Identifier",
                                "name": "getElementById"
                            }
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": "myCanvas",
                                "raw": "\"myCanvas\""
                            }
                        ]
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "ctx"
                    },
                    "init": {
                        "type": "CallExpression",
                        "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                                "type": "Identifier",
                                "name": "canvas"
                            },
                            "property": {
                                "type": "Identifier",
                                "name": "getContext"
                            }
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": "2d",
                                "raw": "\"2d\""
                            }
                        ]
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "COLOR"
                    },
                    "init": {
                        "type": "Literal",
                        "value": "#0095DD",
                        "raw": "\"#0095DD\""
                    }
                }
            ],
            "kind": "const"
        },
        {
            "type": "FunctionDeclaration",
            "id": {
                "type": "Identifier",
                "name": "rand"
            },
            "params": [
                {
                    "type": "Identifier",
                    "name": "min"
                },
                {
                    "type": "Identifier",
                    "name": "max"
                }
            ],
            "body": {
                "type": "BlockStatement",
                "body": [
                    {
                        "type": "ReturnStatement",
                        "argument": {
                            "type": "CallExpression",
                            "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                    "type": "Identifier",
                                    "name": "Math"
                                },
                                "property": {
                                    "type": "Identifier",
                                    "name": "floor"
                                }
                            },
                            "arguments": [
                                {
                                    "type": "BinaryExpression",
                                    "operator": "+",
                                    "left": {
                                        "type": "BinaryExpression",
                                        "operator": "*",
                                        "left": {
                                            "type": "CallExpression",
                                            "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                    "type": "Identifier",
                                                    "name": "Math"
                                                },
                                                "property": {
                                                    "type": "Identifier",
                                                    "name": "random"
                                                }
                                            },
                                            "arguments": []
                                        },
                                        "right": {
                                            "type": "Identifier",
                                            "name": "max"
                                        }
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "min"
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "generator": false,
            "expression": false,
            "async": false
        },
        {
            "type": "FunctionDeclaration",
            "id": {
                "type": "Identifier",
                "name": "distance_sq"
            },
            "params": [
                {
                    "type": "Identifier",
                    "name": "p"
                },
                {
                    "type": "Identifier",
                    "name": "v"
                },
                {
                    "type": "Identifier",
                    "name": "w"
                }
            ],
            "body": {
                "type": "BlockStatement",
                "body": [
                    {
                        "type": "VariableDeclaration",
                        "declarations": [
                            {
                                "type": "VariableDeclarator",
                                "id": {
                                    "type": "Identifier",
                                    "name": "dist_pp_sq"
                                },
                                "init": {
                                    "type": "FunctionExpression",
                                    "id": null,
                                    "params": [
                                        {
                                            "type": "Identifier",
                                            "name": "a"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "b"
                                        }
                                    ],
                                    "body": {
                                        "type": "BlockStatement",
                                        "body": [
                                            {
                                                "type": "ReturnStatement",
                                                "argument": {
                                                    "type": "BinaryExpression",
                                                    "operator": "+",
                                                    "left": {
                                                        "type": "BinaryExpression",
                                                        "operator": "**",
                                                        "left": {
                                                            "type": "BinaryExpression",
                                                            "operator": "-",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "a"
                                                                },
                                                                "property": {
                                                                    "type": "Identifier",
                                                                    "name": "x"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "b"
                                                                },
                                                                "property": {
                                                                    "type": "Identifier",
                                                                    "name": "x"
                                                                }
                                                            }
                                                        },
                                                        "right": {
                                                            "type": "Literal",
                                                            "value": 2,
                                                            "raw": "2"
                                                        }
                                                    },
                                                    "right": {
                                                        "type": "BinaryExpression",
                                                        "operator": "**",
                                                        "left": {
                                                            "type": "BinaryExpression",
                                                            "operator": "-",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "a"
                                                                },
                                                                "property": {
                                                                    "type": "Identifier",
                                                                    "name": "y"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "b"
                                                                },
                                                                "property": {
                                                                    "type": "Identifier",
                                                                    "name": "y"
                                                                }
                                                            }
                                                        },
                                                        "right": {
                                                            "type": "Literal",
                                                            "value": 2,
                                                            "raw": "2"
                                                        }
                                                    }
                                                }
                                            }
                                        ]
                                    },
                                    "generator": false,
                                    "expression": false,
                                    "async": false
                                }
                            }
                        ],
                        "kind": "var"
                    },
                    {
                        "type": "VariableDeclaration",
                        "declarations": [
                            {
                                "type": "VariableDeclarator",
                                "id": {
                                    "type": "Identifier",
                                    "name": "l2"
                                },
                                "init": {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "Identifier",
                                        "name": "dist_pp_sq"
                                    },
                                    "arguments": [
                                        {
                                            "type": "Identifier",
                                            "name": "v"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "w"
                                        }
                                    ]
                                }
                            }
                        ],
                        "kind": "var"
                    },
                    {
                        "type": "IfStatement",
                        "test": {
                            "type": "UnaryExpression",
                            "operator": "!",
                            "argument": {
                                "type": "Identifier",
                                "name": "l2"
                            },
                            "prefix": true
                        },
                        "consequent": {
                            "type": "ReturnStatement",
                            "argument": {
                                "type": "CallExpression",
                                "callee": {
                                    "type": "Identifier",
                                    "name": "dist_pp_sq"
                                },
                                "arguments": [
                                    {
                                        "type": "Identifier",
                                        "name": "p"
                                    },
                                    {
                                        "type": "Identifier",
                                        "name": "v"
                                    }
                                ]
                            }
                        },
                        "alternate": null
                    },
                    {
                        "type": "VariableDeclaration",
                        "declarations": [
                            {
                                "type": "VariableDeclarator",
                                "id": {
                                    "type": "Identifier",
                                    "name": "t"
                                },
                                "init": {
                                    "type": "BinaryExpression",
                                    "operator": "/",
                                    "left": {
                                        "type": "BinaryExpression",
                                        "operator": "+",
                                        "left": {
                                            "type": "BinaryExpression",
                                            "operator": "*",
                                            "left": {
                                                "type": "BinaryExpression",
                                                "operator": "-",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "p"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "x"
                                                    }
                                                },
                                                "right": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "v"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "x"
                                                    }
                                                }
                                            },
                                            "right": {
                                                "type": "BinaryExpression",
                                                "operator": "-",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "w"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "x"
                                                    }
                                                },
                                                "right": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "v"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "x"
                                                    }
                                                }
                                            }
                                        },
                                        "right": {
                                            "type": "BinaryExpression",
                                            "operator": "*",
                                            "left": {
                                                "type": "BinaryExpression",
                                                "operator": "-",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "p"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "y"
                                                    }
                                                },
                                                "right": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "v"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "y"
                                                    }
                                                }
                                            },
                                            "right": {
                                                "type": "BinaryExpression",
                                                "operator": "-",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "w"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "y"
                                                    }
                                                },
                                                "right": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "v"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "y"
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "l2"
                                    }
                                }
                            }
                        ],
                        "kind": "var"
                    },
                    {
                        "type": "IfStatement",
                        "test": {
                            "type": "BinaryExpression",
                            "operator": "<",
                            "left": {
                                "type": "Identifier",
                                "name": "t"
                            },
                            "right": {
                                "type": "Literal",
                                "value": 0,
                                "raw": "0"
                            }
                        },
                        "consequent": {
                            "type": "ReturnStatement",
                            "argument": {
                                "type": "CallExpression",
                                "callee": {
                                    "type": "Identifier",
                                    "name": "dist_pp_sq"
                                },
                                "arguments": [
                                    {
                                        "type": "Identifier",
                                        "name": "p"
                                    },
                                    {
                                        "type": "Identifier",
                                        "name": "v"
                                    }
                                ]
                            }
                        },
                        "alternate": null
                    },
                    {
                        "type": "IfStatement",
                        "test": {
                            "type": "BinaryExpression",
                            "operator": ">",
                            "left": {
                                "type": "Identifier",
                                "name": "t"
                            },
                            "right": {
                                "type": "Literal",
                                "value": 1,
                                "raw": "1"
                            }
                        },
                        "consequent": {
                            "type": "ReturnStatement",
                            "argument": {
                                "type": "CallExpression",
                                "callee": {
                                    "type": "Identifier",
                                    "name": "dist_pp_sq"
                                },
                                "arguments": [
                                    {
                                        "type": "Identifier",
                                        "name": "p"
                                    },
                                    {
                                        "type": "Identifier",
                                        "name": "w"
                                    }
                                ]
                            }
                        },
                        "alternate": null
                    },
                    {
                        "type": "ReturnStatement",
                        "argument": {
                            "type": "CallExpression",
                            "callee": {
                                "type": "Identifier",
                                "name": "dist_pp_sq"
                            },
                            "arguments": [
                                {
                                    "type": "Identifier",
                                    "name": "p"
                                },
                                {
                                    "type": "ObjectExpression",
                                    "properties": [
                                        {
                                            "type": "Property",
                                            "key": {
                                                "type": "Identifier",
                                                "name": "x"
                                            },
                                            "computed": false,
                                            "value": {
                                                "type": "BinaryExpression",
                                                "operator": "+",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "v"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "x"
                                                    }
                                                },
                                                "right": {
                                                    "type": "BinaryExpression",
                                                    "operator": "*",
                                                    "left": {
                                                        "type": "Identifier",
                                                        "name": "t"
                                                    },
                                                    "right": {
                                                        "type": "BinaryExpression",
                                                        "operator": "-",
                                                        "left": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                                "type": "Identifier",
                                                                "name": "w"
                                                            },
                                                            "property": {
                                                                "type": "Identifier",
                                                                "name": "x"
                                                            }
                                                        },
                                                        "right": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                                "type": "Identifier",
                                                                "name": "v"
                                                            },
                                                            "property": {
                                                                "type": "Identifier",
                                                                "name": "x"
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "kind": "init",
                                            "method": false,
                                            "shorthand": false
                                        },
                                        {
                                            "type": "Property",
                                            "key": {
                                                "type": "Identifier",
                                                "name": "y"
                                            },
                                            "computed": false,
                                            "value": {
                                                "type": "BinaryExpression",
                                                "operator": "+",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "v"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "y"
                                                    }
                                                },
                                                "right": {
                                                    "type": "BinaryExpression",
                                                    "operator": "*",
                                                    "left": {
                                                        "type": "Identifier",
                                                        "name": "t"
                                                    },
                                                    "right": {
                                                        "type": "BinaryExpression",
                                                        "operator": "-",
                                                        "left": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                                "type": "Identifier",
                                                                "name": "w"
                                                            },
                                                            "property": {
                                                                "type": "Identifier",
                                                                "name": "y"
                                                            }
                                                        },
                                                        "right": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                                "type": "Identifier",
                                                                "name": "v"
                                                            },
                                                            "property": {
                                                                "type": "Identifier",
                                                                "name": "y"
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "kind": "init",
                                            "method": false,
                                            "shorthand": false
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                ]
            },
            "generator": false,
            "expression": false,
            "async": false
        },
        {
            "type": "FunctionDeclaration",
            "id": {
                "type": "Identifier",
                "name": "distance"
            },
            "params": [
                {
                    "type": "Identifier",
                    "name": "p"
                },
                {
                    "type": "Identifier",
                    "name": "v"
                },
                {
                    "type": "Identifier",
                    "name": "w"
                }
            ],
            "body": {
                "type": "BlockStatement",
                "body": [
                    {
                        "type": "ReturnStatement",
                        "argument": {
                            "type": "CallExpression",
                            "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                    "type": "Identifier",
                                    "name": "Math"
                                },
                                "property": {
                                    "type": "Identifier",
                                    "name": "sqrt"
                                }
                            },
                            "arguments": [
                                {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "Identifier",
                                        "name": "distance_sq"
                                    },
                                    "arguments": [
                                        {
                                            "type": "Identifier",
                                            "name": "p"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "v"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "w"
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                ]
            },
            "generator": false,
            "expression": false,
            "async": false
        },
        {
            "type": "FunctionDeclaration",
            "id": {
                "type": "Identifier",
                "name": "GameObject"
            },
            "params": [],
            "body": {
                "type": "BlockStatement",
                "body": [
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "AssignmentExpression",
                            "operator": "=",
                            "left": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                    "type": "ThisExpression"
                                },
                                "property": {
                                    "type": "Identifier",
                                    "name": "x"
                                }
                            },
                            "right": {
                                "type": "Literal",
                                "value": 0,
                                "raw": "0"
                            }
                        }
                    },
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "AssignmentExpression",
                            "operator": "=",
                            "left": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                    "type": "ThisExpression"
                                },
                                "property": {
                                    "type": "Identifier",
                                    "name": "y"
                                }
                            },
                            "right": {
                                "type": "Literal",
                                "value": 0,
                                "raw": "0"
                            }
                        }
                    }
                ]
            },
            "generator": false,
            "expression": false,
            "async": false
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "AssignmentExpression",
                "operator": "=",
                "left": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                            "type": "Identifier",
                            "name": "GameObject"
                        },
                        "property": {
                            "type": "Identifier",
                            "name": "prototype"
                        }
                    },
                    "property": {
                        "type": "Identifier",
                        "name": "init"
                    }
                },
                "right": {
                    "type": "FunctionExpression",
                    "id": null,
                    "params": [
                        {
                            "type": "Identifier",
                            "name": "x"
                        },
                        {
                            "type": "Identifier",
                            "name": "y"
                        }
                    ],
                    "body": {
                        "type": "BlockStatement",
                        "body": [
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                            "type": "ThisExpression"
                                        },
                                        "property": {
                                            "type": "Identifier",
                                            "name": "x"
                                        }
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "x"
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                            "type": "ThisExpression"
                                        },
                                        "property": {
                                            "type": "Identifier",
                                            "name": "y"
                                        }
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "y"
                                    }
                                }
                            }
                        ]
                    },
                    "generator": false,
                    "expression": false,
                    "async": false
                }
            }
        },
        {
            "type": "FunctionDeclaration",
            "id": {
                "type": "Identifier",
                "name": "RectObject"
            },
            "params": [
                {
                    "type": "Identifier",
                    "name": "width"
                },
                {
                    "type": "Identifier",
                    "name": "height"
                }
            ],
            "body": {
                "type": "BlockStatement",
                "body": [
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "CallExpression",
                            "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                    "type": "Identifier",
                                    "name": "GameObject"
                                },
                                "property": {
                                    "type": "Identifier",
                                    "name": "call"
                                }
                            },
                            "arguments": [
                                {
                                    "type": "ThisExpression"
                                }
                            ]
                        }
                    },
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "AssignmentExpression",
                            "operator": "=",
                            "left": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                    "type": "ThisExpression"
                                },
                                "property": {
                                    "type": "Identifier",
                                    "name": "width"
                                }
                            },
                            "right": {
                                "type": "Identifier",
                                "name": "width"
                            }
                        }
                    },
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "AssignmentExpression",
                            "operator": "=",
                            "left": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                    "type": "ThisExpression"
                                },
                                "property": {
                                    "type": "Identifier",
                                    "name": "height"
                                }
                            },
                            "right": {
                                "type": "Identifier",
                                "name": "height"
                            }
                        }
                    }
                ]
            },
            "generator": false,
            "expression": false,
            "async": false
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "AssignmentExpression",
                "operator": "=",
                "left": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                        "type": "Identifier",
                        "name": "RectObject"
                    },
                    "property": {
                        "type": "Identifier",
                        "name": "prototype"
                    }
                },
                "right": {
                    "type": "CallExpression",
                    "callee": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                            "type": "Identifier",
                            "name": "Object"
                        },
                        "property": {
                            "type": "Identifier",
                            "name": "create"
                        }
                    },
                    "arguments": [
                        {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                                "type": "Identifier",
                                "name": "GameObject"
                            },
                            "property": {
                                "type": "Identifier",
                                "name": "prototype"
                            }
                        }
                    ]
                }
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "AssignmentExpression",
                "operator": "=",
                "left": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                            "type": "Identifier",
                            "name": "RectObject"
                        },
                        "property": {
                            "type": "Identifier",
                            "name": "prototype"
                        }
                    },
                    "property": {
                        "type": "Identifier",
                        "name": "draw"
                    }
                },
                "right": {
                    "type": "FunctionExpression",
                    "id": null,
                    "params": [],
                    "body": {
                        "type": "BlockStatement",
                        "body": [
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "ctx"
                                        },
                                        "property": {
                                            "type": "Identifier",
                                            "name": "beginPath"
                                        }
                                    },
                                    "arguments": []
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "ctx"
                                        },
                                        "property": {
                                            "type": "Identifier",
                                            "name": "rect"
                                        }
                                    },
                                    "arguments": [
                                        {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                                "type": "ThisExpression"
                                            },
                                            "property": {
                                                "type": "Identifier",
                                                "name": "x"
                                            }
                                        },
                                        {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                                "type": "ThisExpression"
                                            },
                                            "property": {
                                                "type": "Identifier",
                                                "name": "y"
                                            }
                                        },
                                        {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                                "type": "ThisExpression"
                                            },
                                            "property": {
                                                "type": "Identifier",
                                                "name": "width"
                                            }
                                        },
                                        {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                                "type": "ThisExpression"
                                            },
                                            "property": {
                                                "type": "Identifier",
                                                "name": "height"
                                            }
                                        }
                                    ]
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "ctx"
                                        },
                                        "property": {
                                            "type": "Identifier",
                                            "name": "fillStyle"
                                        }
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "COLOR"
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "ctx"
                                        },
                                        "property": {
                                            "type": "Identifier",
                                            "name": "fill"
                                        }
                                    },
                                    "arguments": []
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "ctx"
                                        },
                                        "property": {
                                            "type": "Identifier",
                                            "name": "closePath"
                                        }
                                    },
                                    "arguments": []
                                }
                            }
                        ]
                    },
                    "generator": false,
                    "expression": false,
                    "async": false
                }
            }
        },
        {
            "type": "FunctionDeclaration",
            "id": {
                "type": "Identifier",
                "name": "Block"
            },
            "params": [],
            "body": {
                "type": "BlockStatement",
                "body": [
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "CallExpression",
                            "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                    "type": "Identifier",
                                    "name": "RectObject"
                                },
                                "property": {
                                    "type": "Identifier",
                                    "name": "call"
                                }
                            },
                            "arguments": [
                                {
                                    "type": "ThisExpression"
                                },
                                {
                                    "type": "Literal",
                                    "value": 94,
                                    "raw": "94"
                                },
                                {
                                    "type": "Literal",
                                    "value": 20,
                                    "raw": "20"
                                }
                            ]
                        }
                    }
                ]
            },
            "generator": false,
            "expression": false,
            "async": false
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "AssignmentExpression",
                "operator": "=",
                "left": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                        "type": "Identifier",
                        "name": "Block"
                    },
                    "property": {
                        "type": "Identifier",
                        "name": "prototype"
                    }
                },
                "right": {
                    "type": "CallExpression",
                    "callee": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                            "type": "Identifier",
                            "name": "Object"
                        },
                        "property": {
                            "type": "Identifier",
                            "name": "create"
                        }
                    },
                    "arguments": [
                        {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                                "type": "Identifier",
                                "name": "RectObject"
                            },
                            "property": {
                                "type": "Identifier",
                                "name": "prototype"
                            }
                        }
                    ]
                }
            }
        },
        {
            "type": "FunctionDeclaration",
            "id": {
                "type": "Identifier",
                "name": "BlockList"
            },
            "params": [
                {
                    "type": "Identifier",
                    "name": "rows"
                },
                {
                    "type": "Identifier",
                    "name": "cols"
                },
                {
                    "type": "AssignmentPattern",
                    "left": {
                        "type": "Identifier",
                        "name": "spacing_x"
                    },
                    "right": {
                        "type": "Literal",
                        "value": 20,
                        "raw": "20"
                    }
                },
                {
                    "type": "AssignmentPattern",
                    "left": {
                        "type": "Identifier",
                        "name": "spacing_y"
                    },
                    "right": {
                        "type": "Literal",
                        "value": 10,
                        "raw": "10"
                    }
                }
            ],
            "body": {
                "type": "BlockStatement",
                "body": [
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "CallExpression",
                            "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                    "type": "Identifier",
                                    "name": "GameObject"
                                },
                                "property": {
                                    "type": "Identifier",
                                    "name": "call"
                                }
                            },
                            "arguments": [
                                {
                                    "type": "ThisExpression"
                                }
                            ]
                        }
                    },
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "AssignmentExpression",
                            "operator": "=",
                            "left": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                    "type": "ThisExpression"
                                },
                                "property": {
                                    "type": "Identifier",
                                    "name": "rows"
                                }
                            },
                            "right": {
                                "type": "Identifier",
                                "name": "rows"
                            }
                        }
                    },
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "AssignmentExpression",
                            "operator": "=",
                            "left": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                    "type": "ThisExpression"
                                },
                                "property": {
                                    "type": "Identifier",
                                    "name": "cols"
                                }
                            },
                            "right": {
                                "type": "Identifier",
                                "name": "cols"
                            }
                        }
                    },
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "AssignmentExpression",
                            "operator": "=",
                            "left": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                    "type": "ThisExpression"
                                },
                                "property": {
                                    "type": "Identifier",
                                    "name": "spacing_x"
                                }
                            },
                            "right": {
                                "type": "Identifier",
                                "name": "spacing_x"
                            }
                        }
                    },
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "AssignmentExpression",
                            "operator": "=",
                            "left": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                    "type": "ThisExpression"
                                },
                                "property": {
                                    "type": "Identifier",
                                    "name": "spacing_y"
                                }
                            },
                            "right": {
                                "type": "Identifier",
                                "name": "spacing_y"
                            }
                        }
                    },
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "AssignmentExpression",
                            "operator": "=",
                            "left": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                    "type": "ThisExpression"
                                },
                                "property": {
                                    "type": "Identifier",
                                    "name": "blocks"
                                }
                            },
                            "right": {
                                "type": "ArrayExpression",
                                "elements": []
                            }
                        }
                    },
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "AssignmentExpression",
                            "operator": "=",
                            "left": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                    "type": "ThisExpression"
                                },
                                "property": {
                                    "type": "Identifier",
                                    "name": "initBlocks"
                                }
                            },
                            "right": {
                                "type": "FunctionExpression",
                                "id": null,
                                "params": [],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "ForStatement",
                                            "init": {
                                                "type": "VariableDeclaration",
                                                "declarations": [
                                                    {
                                                        "type": "VariableDeclarator",
                                                        "id": {
                                                            "type": "Identifier",
                                                            "name": "row"
                                                        },
                                                        "init": {
                                                            "type": "Literal",
                                                            "value": 0,
                                                            "raw": "0"
                                                        }
                                                    }
                                                ],
                                                "kind": "let"
                                            },
                                            "test": {
                                                "type": "BinaryExpression",
                                                "operator": "<",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "row"
                                                },
                                                "right": {
                                                    "type": "Identifier",
                                                    "name": "rows"
                                                }
                                            },
                                            "update": {
                                                "type": "UpdateExpression",
                                                "operator": "++",
                                                "argument": {
                                                    "type": "Identifier",
                                                    "name": "row"
                                                },
                                                "prefix": false
                                            },
                                            "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "ForStatement",
                                                        "init": {
                                                            "type": "VariableDeclaration",
                                                            "declarations": [
                                                                {
                                                                    "type": "VariableDeclarator",
                                                                    "id": {
                                                                        "type": "Identifier",
                                                                        "name": "col"
                                                                    },
                                                                    "init": {
                                                                        "type": "Literal",
                                                                        "value": 0,
                                                                        "raw": "0"
                                                                    }
                                                                }
                                                            ],
                                                            "kind": "let"
                                                        },
                                                        "test": {
                                                            "type": "BinaryExpression",
                                                            "operator": "<",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "col"
                                                            },
                                                            "right": {
                                                                "type": "Identifier",
                                                                "name": "cols"
                                                            }
                                                        },
                                                        "update": {
                                                            "type": "UpdateExpression",
                                                            "operator": "++",
                                                            "argument": {
                                                                "type": "Identifier",
                                                                "name": "col"
                                                            },
                                                            "prefix": false
                                                        },
                                                        "body": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "VariableDeclaration",
                                                                    "declarations": [
                                                                        {
                                                                            "type": "VariableDeclarator",
                                                                            "id": {
                                                                                "type": "Identifier",
                                                                                "name": "block"
                                                                            },
                                                                            "init": {
                                                                                "type": "NewExpression",
                                                                                "callee": {
                                                                                    "type": "Identifier",
                                                                                    "name": "Block"
                                                                                },
                                                                                "arguments": []
                                                                            }
                                                                        }
                                                                    ],
                                                                    "kind": "let"
                                                                },
                                                                {
                                                                    "type": "VariableDeclaration",
                                                                    "declarations": [
                                                                        {
                                                                            "type": "VariableDeclarator",
                                                                            "id": {
                                                                                "type": "Identifier",
                                                                                "name": "block_x"
                                                                            },
                                                                            "init": {
                                                                                "type": "BinaryExpression",
                                                                                "operator": "+",
                                                                                "left": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": false,
                                                                                    "object": {
                                                                                        "type": "ThisExpression"
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Identifier",
                                                                                        "name": "x"
                                                                                    }
                                                                                },
                                                                                "right": {
                                                                                    "type": "BinaryExpression",
                                                                                    "operator": "*",
                                                                                    "left": {
                                                                                        "type": "Identifier",
                                                                                        "name": "col"
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "BinaryExpression",
                                                                                        "operator": "+",
                                                                                        "left": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": false,
                                                                                            "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "block"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Identifier",
                                                                                                "name": "width"
                                                                                            }
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": false,
                                                                                            "object": {
                                                                                                "type": "ThisExpression"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Identifier",
                                                                                                "name": "spacing_x"
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    ],
                                                                    "kind": "let"
                                                                },
                                                                {
                                                                    "type": "VariableDeclaration",
                                                                    "declarations": [
                                                                        {
                                                                            "type": "VariableDeclarator",
                                                                            "id": {
                                                                                "type": "Identifier",
                                                                                "name": "block_y"
                                                                            },
                                                                            "init": {
                                                                                "type": "BinaryExpression",
                                                                                "operator": "+",
                                                                                "left": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": false,
                                                                                    "object": {
                                                                                        "type": "ThisExpression"
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Identifier",
                                                                                        "name": "y"
                                                                                    }
                                                                                },
                                                                                "right": {
                                                                                    "type": "BinaryExpression",
                                                                                    "operator": "*",
                                                                                    "left": {
                                                                                        "type": "Identifier",
                                                                                        "name": "row"
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "BinaryExpression",
                                                                                        "operator": "+",
                                                                                        "left": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": false,
                                                                                            "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "block"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Identifier",
                                                                                                "name": "height"
                                                                                            }
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": false,
                                                                                            "object": {
                                                                                                "type": "ThisExpression"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Identifier",
                                                                                                "name": "spacing_y"
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    ],
                                                                    "kind": "let"
                                                                },
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                            "type": "MemberExpression",
                                                                            "computed": false,
                                                                            "object": {
                                                                                "type": "Identifier",
                                                                                "name": "block"
                                                                            },
                                                                            "property": {
                                                                                "type": "Identifier",
                                                                                "name": "init"
                                                                            }
                                                                        },
                                                                        "arguments": [
                                                                            {
                                                                                "type": "Identifier",
                                                                                "name": "block_x"
                                                                            },
                                                                            {
                                                                                "type": "Identifier",
                                                                                "name": "block_y"
                                                                            }
                                                                        ]
                                                                    }
                                                                },
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                            "type": "MemberExpression",
                                                                            "computed": false,
                                                                            "object": {
                                                                                "type": "MemberExpression",
                                                                                "computed": false,
                                                                                "object": {
                                                                                    "type": "ThisExpression"
                                                                                },
                                                                                "property": {
                                                                                    "type": "Identifier",
                                                                                    "name": "blocks"
                                                                                }
                                                                            },
                                                                            "property": {
                                                                                "type": "Identifier",
                                                                                "name": "push"
                                                                            }
                                                                        },
                                                                        "arguments": [
                                                                            {
                                                                                "type": "Identifier",
                                                                                "name": "block"
                                                                            }
                                                                        ]
                                                                    }
                                                                }
                                                            ]
                                                        }
                                                    }
                                                ]
                                            }
                                        }
                                    ]
                                },
                                "generator": false,
                                "expression": false,
                                "async": false
                            }
                        }
                    },
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "AssignmentExpression",
                            "operator": "=",
                            "left": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                    "type": "ThisExpression"
                                },
                                "property": {
                                    "type": "Identifier",
                                    "name": "draw"
                                }
                            },
                            "right": {
                                "type": "FunctionExpression",
                                "id": null,
                                "params": [],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "ForStatement",
                                            "init": {
                                                "type": "VariableDeclaration",
                                                "declarations": [
                                                    {
                                                        "type": "VariableDeclarator",
                                                        "id": {
                                                            "type": "Identifier",
                                                            "name": "i"
                                                        },
                                                        "init": {
                                                            "type": "Literal",
                                                            "value": 0,
                                                            "raw": "0"
                                                        }
                                                    }
                                                ],
                                                "kind": "let"
                                            },
                                            "test": {
                                                "type": "BinaryExpression",
                                                "operator": "<",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "i"
                                                },
                                                "right": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                            "type": "ThisExpression"
                                                        },
                                                        "property": {
                                                            "type": "Identifier",
                                                            "name": "blocks"
                                                        }
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "length"
                                                    }
                                                }
                                            },
                                            "update": {
                                                "type": "UpdateExpression",
                                                "operator": "++",
                                                "argument": {
                                                    "type": "Identifier",
                                                    "name": "i"
                                                },
                                                "prefix": false
                                            },
                                            "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "VariableDeclaration",
                                                        "declarations": [
                                                            {
                                                                "type": "VariableDeclarator",
                                                                "id": {
                                                                    "type": "Identifier",
                                                                    "name": "block"
                                                                },
                                                                "init": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                            "type": "ThisExpression"
                                                                        },
                                                                        "property": {
                                                                            "type": "Identifier",
                                                                            "name": "blocks"
                                                                        }
                                                                    },
                                                                    "property": {
                                                                        "type": "Identifier",
                                                                        "name": "i"
                                                                    }
                                                                }
                                                            }
                                                        ],
                                                        "kind": "let"
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "block"
                                                                },
                                                                "property": {
                                                                    "type": "Identifier",
                                                                    "name": "draw"
                                                                }
                                                            },
                                                            "arguments": []
                                                        }
                                                    }
                                                ]
                                            }
                                        }
                                    ]
                                },
                                "generator": false,
                                "expression": false,
                                "async": false
                            }
                        }
                    },
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "AssignmentExpression",
                            "operator": "=",
                            "left": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                    "type": "ThisExpression"
                                },
                                "property": {
                                    "type": "Identifier",
                                    "name": "isEmpty"
                                }
                            },
                            "right": {
                                "type": "FunctionExpression",
                                "id": null,
                                "params": [],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "ReturnStatement",
                                            "argument": {
                                                "type": "UnaryExpression",
                                                "operator": "!",
                                                "argument": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                            "type": "ThisExpression"
                                                        },
                                                        "property": {
                                                            "type": "Identifier",
                                                            "name": "blocks"
                                                        }
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "length"
                                                    }
                                                },
                                                "prefix": true
                                            }
                                        }
                                    ]
                                },
                                "generator": false,
                                "expression": false,
                                "async": false
                            }
                        }
                    },
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "AssignmentExpression",
                            "operator": "=",
                            "left": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                    "type": "ThisExpression"
                                },
                                "property": {
                                    "type": "Identifier",
                                    "name": "scoreBlock"
                                }
                            },
                            "right": {
                                "type": "FunctionExpression",
                                "id": null,
                                "params": [
                                    {
                                        "type": "Identifier",
                                        "name": "i"
                                    }
                                ],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "CallExpression",
                                                "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                            "type": "ThisExpression"
                                                        },
                                                        "property": {
                                                            "type": "Identifier",
                                                            "name": "blocks"
                                                        }
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "splice"
                                                    }
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "Identifier",
                                                        "name": "i"
                                                    },
                                                    {
                                                        "type": "Literal",
                                                        "value": 1,
                                                        "raw": "1"
                                                    }
                                                ]
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "UpdateExpression",
                                                "operator": "++",
                                                "argument": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "game"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "score"
                                                    }
                                                },
                                                "prefix": false
                                            }
                                        }
                                    ]
                                },
                                "generator": false,
                                "expression": false,
                                "async": false
                            }
                        }
                    }
                ]
            },
            "generator": false,
            "expression": false,
            "async": false
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "AssignmentExpression",
                "operator": "=",
                "left": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                        "type": "Identifier",
                        "name": "BlockList"
                    },
                    "property": {
                        "type": "Identifier",
                        "name": "prototype"
                    }
                },
                "right": {
                    "type": "CallExpression",
                    "callee": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                            "type": "Identifier",
                            "name": "Object"
                        },
                        "property": {
                            "type": "Identifier",
                            "name": "create"
                        }
                    },
                    "arguments": [
                        {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                                "type": "Identifier",
                                "name": "GameObject"
                            },
                            "property": {
                                "type": "Identifier",
                                "name": "prototype"
                            }
                        }
                    ]
                }
            }
        },
        {
            "type": "FunctionDeclaration",
            "id": {
                "type": "Identifier",
                "name": "Ball"
            },
            "params": [
                {
                    "type": "Identifier",
                    "name": "radius"
                }
            ],
            "body": {
                "type": "BlockStatement",
                "body": [
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "CallExpression",
                            "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                    "type": "Identifier",
                                    "name": "GameObject"
                                },
                                "property": {
                                    "type": "Identifier",
                                    "name": "call"
                                }
                            },
                            "arguments": [
                                {
                                    "type": "ThisExpression"
                                }
                            ]
                        }
                    },
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "AssignmentExpression",
                            "operator": "=",
                            "left": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                    "type": "ThisExpression"
                                },
                                "property": {
                                    "type": "Identifier",
                                    "name": "radius"
                                }
                            },
                            "right": {
                                "type": "Identifier",
                                "name": "radius"
                            }
                        }
                    },
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "AssignmentExpression",
                            "operator": "=",
                            "left": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                    "type": "ThisExpression"
                                },
                                "property": {
                                    "type": "Identifier",
                                    "name": "startMoving"
                                }
                            },
                            "right": {
                                "type": "FunctionExpression",
                                "id": null,
                                "params": [
                                    {
                                        "type": "Identifier",
                                        "name": "vx"
                                    },
                                    {
                                        "type": "Identifier",
                                        "name": "vy"
                                    }
                                ],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "v"
                                                    }
                                                },
                                                "right": {
                                                    "type": "ObjectExpression",
                                                    "properties": [
                                                        {
                                                            "type": "Property",
                                                            "key": {
                                                                "type": "Identifier",
                                                                "name": "x"
                                                            },
                                                            "computed": false,
                                                            "value": {
                                                                "type": "Identifier",
                                                                "name": "vx"
                                                            },
                                                            "kind": "init",
                                                            "method": false,
                                                            "shorthand": false
                                                        },
                                                        {
                                                            "type": "Property",
                                                            "key": {
                                                                "type": "Identifier",
                                                                "name": "y"
                                                            },
                                                            "computed": false,
                                                            "value": {
                                                                "type": "Identifier",
                                                                "name": "vy"
                                                            },
                                                            "kind": "init",
                                                            "method": false,
                                                            "shorthand": false
                                                        }
                                                    ]
                                                }
                                            }
                                        }
                                    ]
                                },
                                "generator": false,
                                "expression": false,
                                "async": false
                            }
                        }
                    },
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "AssignmentExpression",
                            "operator": "=",
                            "left": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                    "type": "ThisExpression"
                                },
                                "property": {
                                    "type": "Identifier",
                                    "name": "reflect"
                                }
                            },
                            "right": {
                                "type": "FunctionExpression",
                                "id": null,
                                "params": [
                                    {
                                        "type": "Identifier",
                                        "name": "isHorizontal"
                                    }
                                ],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "IfStatement",
                                            "test": {
                                                "type": "Identifier",
                                                "name": "isHorizontal"
                                            },
                                            "consequent": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "*=",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                        "type": "ThisExpression"
                                                                    },
                                                                    "property": {
                                                                        "type": "Identifier",
                                                                        "name": "v"
                                                                    }
                                                                },
                                                                "property": {
                                                                    "type": "Identifier",
                                                                    "name": "y"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "UnaryExpression",
                                                                "operator": "-",
                                                                "argument": {
                                                                    "type": "Literal",
                                                                    "value": 1,
                                                                    "raw": "1"
                                                                },
                                                                "prefix": true
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            "alternate": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "*=",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                        "type": "ThisExpression"
                                                                    },
                                                                    "property": {
                                                                        "type": "Identifier",
                                                                        "name": "v"
                                                                    }
                                                                },
                                                                "property": {
                                                                    "type": "Identifier",
                                                                    "name": "x"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "UnaryExpression",
                                                                "operator": "-",
                                                                "argument": {
                                                                    "type": "Literal",
                                                                    "value": 1,
                                                                    "raw": "1"
                                                                },
                                                                "prefix": true
                                                            }
                                                        }
                                                    }
                                                ]
                                            }
                                        }
                                    ]
                                },
                                "generator": false,
                                "expression": false,
                                "async": false
                            }
                        }
                    },
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "AssignmentExpression",
                            "operator": "=",
                            "left": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                    "type": "ThisExpression"
                                },
                                "property": {
                                    "type": "Identifier",
                                    "name": "update"
                                }
                            },
                            "right": {
                                "type": "FunctionExpression",
                                "id": null,
                                "params": [],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "+=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "x"
                                                    }
                                                },
                                                "right": {
                                                    "type": "BinaryExpression",
                                                    "operator": "*",
                                                    "left": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                            "type": "Identifier",
                                                            "name": "game"
                                                        },
                                                        "property": {
                                                            "type": "Identifier",
                                                            "name": "speed"
                                                        }
                                                    },
                                                    "right": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                                "type": "ThisExpression"
                                                            },
                                                            "property": {
                                                                "type": "Identifier",
                                                                "name": "v"
                                                            }
                                                        },
                                                        "property": {
                                                            "type": "Identifier",
                                                            "name": "x"
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "+=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "y"
                                                    }
                                                },
                                                "right": {
                                                    "type": "BinaryExpression",
                                                    "operator": "*",
                                                    "left": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                            "type": "Identifier",
                                                            "name": "game"
                                                        },
                                                        "property": {
                                                            "type": "Identifier",
                                                            "name": "speed"
                                                        }
                                                    },
                                                    "right": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                                "type": "ThisExpression"
                                                            },
                                                            "property": {
                                                                "type": "Identifier",
                                                                "name": "v"
                                                            }
                                                        },
                                                        "property": {
                                                            "type": "Identifier",
                                                            "name": "y"
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "type": "IfStatement",
                                            "test": {
                                                "type": "BinaryExpression",
                                                "operator": ">",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "y"
                                                    }
                                                },
                                                "right": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "canvas"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "height"
                                                    }
                                                }
                                            },
                                            "consequent": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "game"
                                                                },
                                                                "property": {
                                                                    "type": "Identifier",
                                                                    "name": "loose"
                                                                }
                                                            },
                                                            "arguments": []
                                                        }
                                                    }
                                                ]
                                            },
                                            "alternate": null
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "CallExpression",
                                                "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "collisionHandler"
                                                    }
                                                },
                                                "arguments": []
                                            }
                                        }
                                    ]
                                },
                                "generator": false,
                                "expression": false,
                                "async": false
                            }
                        }
                    },
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "AssignmentExpression",
                            "operator": "=",
                            "left": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                    "type": "ThisExpression"
                                },
                                "property": {
                                    "type": "Identifier",
                                    "name": "collisionHandler"
                                }
                            },
                            "right": {
                                "type": "FunctionExpression",
                                "id": null,
                                "params": [],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "IfStatement",
                                            "test": {
                                                "type": "BinaryExpression",
                                                "operator": "==",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                            "type": "ThisExpression"
                                                        },
                                                        "property": {
                                                            "type": "Identifier",
                                                            "name": "collisionHandler"
                                                        }
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "paddleHitLock"
                                                    }
                                                },
                                                "right": {
                                                    "type": "UnaryExpression",
                                                    "operator": "void",
                                                    "argument": {
                                                        "type": "Literal",
                                                        "value": 0,
                                                        "raw": "0"
                                                    },
                                                    "prefix": true
                                                }
                                            },
                                            "consequent": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                        "type": "ThisExpression"
                                                                    },
                                                                    "property": {
                                                                        "type": "Identifier",
                                                                        "name": "collisionHandler"
                                                                    }
                                                                },
                                                                "property": {
                                                                    "type": "Identifier",
                                                                    "name": "paddleHitLock"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "Literal",
                                                                "value": 0,
                                                                "raw": "0"
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            "alternate": null
                                        },
                                        {
                                            "type": "IfStatement",
                                            "test": {
                                                "type": "BinaryExpression",
                                                "operator": "==",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                            "type": "ThisExpression"
                                                        },
                                                        "property": {
                                                            "type": "Identifier",
                                                            "name": "collisionHandler"
                                                        }
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "wallHitLock"
                                                    }
                                                },
                                                "right": {
                                                    "type": "UnaryExpression",
                                                    "operator": "void",
                                                    "argument": {
                                                        "type": "Literal",
                                                        "value": 0,
                                                        "raw": "0"
                                                    },
                                                    "prefix": true
                                                }
                                            },
                                            "consequent": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                        "type": "ThisExpression"
                                                                    },
                                                                    "property": {
                                                                        "type": "Identifier",
                                                                        "name": "collisionHandler"
                                                                    }
                                                                },
                                                                "property": {
                                                                    "type": "Identifier",
                                                                    "name": "wallHitLock"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "Literal",
                                                                "value": 0,
                                                                "raw": "0"
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            "alternate": null
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "HORIZONTAL"
                                                    },
                                                    "init": {
                                                        "type": "Literal",
                                                        "value": true,
                                                        "raw": "true"
                                                    }
                                                }
                                            ],
                                            "kind": "const"
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "VERTICAL"
                                                    },
                                                    "init": {
                                                        "type": "Literal",
                                                        "value": false,
                                                        "raw": "false"
                                                    }
                                                }
                                            ],
                                            "kind": "const"
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "TOP_LEFT"
                                                    },
                                                    "init": {
                                                        "type": "Literal",
                                                        "value": 0,
                                                        "raw": "0"
                                                    }
                                                }
                                            ],
                                            "kind": "const"
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "TOP_RIGHT"
                                                    },
                                                    "init": {
                                                        "type": "Literal",
                                                        "value": 1,
                                                        "raw": "1"
                                                    }
                                                }
                                            ],
                                            "kind": "const"
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "BOT_LEFT"
                                                    },
                                                    "init": {
                                                        "type": "Literal",
                                                        "value": 2,
                                                        "raw": "2"
                                                    }
                                                }
                                            ],
                                            "kind": "const"
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "BOT_RIGHT"
                                                    },
                                                    "init": {
                                                        "type": "Literal",
                                                        "value": 3,
                                                        "raw": "3"
                                                    }
                                                }
                                            ],
                                            "kind": "const"
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "getCorners"
                                                    },
                                                    "init": {
                                                        "type": "FunctionExpression",
                                                        "id": null,
                                                        "params": [
                                                            {
                                                                "type": "Identifier",
                                                                "name": "obj"
                                                            }
                                                        ],
                                                        "body": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "ReturnStatement",
                                                                    "argument": {
                                                                        "type": "ArrayExpression",
                                                                        "elements": [
                                                                            {
                                                                                "type": "ObjectExpression",
                                                                                "properties": [
                                                                                    {
                                                                                        "type": "Property",
                                                                                        "key": {
                                                                                            "type": "Identifier",
                                                                                            "name": "x"
                                                                                        },
                                                                                        "computed": false,
                                                                                        "value": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": false,
                                                                                            "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "obj"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Identifier",
                                                                                                "name": "x"
                                                                                            }
                                                                                        },
                                                                                        "kind": "init",
                                                                                        "method": false,
                                                                                        "shorthand": false
                                                                                    },
                                                                                    {
                                                                                        "type": "Property",
                                                                                        "key": {
                                                                                            "type": "Identifier",
                                                                                            "name": "y"
                                                                                        },
                                                                                        "computed": false,
                                                                                        "value": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": false,
                                                                                            "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "obj"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Identifier",
                                                                                                "name": "y"
                                                                                            }
                                                                                        },
                                                                                        "kind": "init",
                                                                                        "method": false,
                                                                                        "shorthand": false
                                                                                    }
                                                                                ]
                                                                            },
                                                                            {
                                                                                "type": "ObjectExpression",
                                                                                "properties": [
                                                                                    {
                                                                                        "type": "Property",
                                                                                        "key": {
                                                                                            "type": "Identifier",
                                                                                            "name": "x"
                                                                                        },
                                                                                        "computed": false,
                                                                                        "value": {
                                                                                            "type": "BinaryExpression",
                                                                                            "operator": "+",
                                                                                            "left": {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": false,
                                                                                                "object": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "obj"
                                                                                                },
                                                                                                "property": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "x"
                                                                                                }
                                                                                            },
                                                                                            "right": {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": false,
                                                                                                "object": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "obj"
                                                                                                },
                                                                                                "property": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "width"
                                                                                                }
                                                                                            }
                                                                                        },
                                                                                        "kind": "init",
                                                                                        "method": false,
                                                                                        "shorthand": false
                                                                                    },
                                                                                    {
                                                                                        "type": "Property",
                                                                                        "key": {
                                                                                            "type": "Identifier",
                                                                                            "name": "y"
                                                                                        },
                                                                                        "computed": false,
                                                                                        "value": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": false,
                                                                                            "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "obj"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Identifier",
                                                                                                "name": "y"
                                                                                            }
                                                                                        },
                                                                                        "kind": "init",
                                                                                        "method": false,
                                                                                        "shorthand": false
                                                                                    }
                                                                                ]
                                                                            },
                                                                            {
                                                                                "type": "ObjectExpression",
                                                                                "properties": [
                                                                                    {
                                                                                        "type": "Property",
                                                                                        "key": {
                                                                                            "type": "Identifier",
                                                                                            "name": "x"
                                                                                        },
                                                                                        "computed": false,
                                                                                        "value": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": false,
                                                                                            "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "obj"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Identifier",
                                                                                                "name": "x"
                                                                                            }
                                                                                        },
                                                                                        "kind": "init",
                                                                                        "method": false,
                                                                                        "shorthand": false
                                                                                    },
                                                                                    {
                                                                                        "type": "Property",
                                                                                        "key": {
                                                                                            "type": "Identifier",
                                                                                            "name": "y"
                                                                                        },
                                                                                        "computed": false,
                                                                                        "value": {
                                                                                            "type": "BinaryExpression",
                                                                                            "operator": "+",
                                                                                            "left": {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": false,
                                                                                                "object": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "obj"
                                                                                                },
                                                                                                "property": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "y"
                                                                                                }
                                                                                            },
                                                                                            "right": {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": false,
                                                                                                "object": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "obj"
                                                                                                },
                                                                                                "property": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "height"
                                                                                                }
                                                                                            }
                                                                                        },
                                                                                        "kind": "init",
                                                                                        "method": false,
                                                                                        "shorthand": false
                                                                                    }
                                                                                ]
                                                                            },
                                                                            {
                                                                                "type": "ObjectExpression",
                                                                                "properties": [
                                                                                    {
                                                                                        "type": "Property",
                                                                                        "key": {
                                                                                            "type": "Identifier",
                                                                                            "name": "x"
                                                                                        },
                                                                                        "computed": false,
                                                                                        "value": {
                                                                                            "type": "BinaryExpression",
                                                                                            "operator": "+",
                                                                                            "left": {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": false,
                                                                                                "object": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "obj"
                                                                                                },
                                                                                                "property": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "x"
                                                                                                }
                                                                                            },
                                                                                            "right": {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": false,
                                                                                                "object": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "obj"
                                                                                                },
                                                                                                "property": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "width"
                                                                                                }
                                                                                            }
                                                                                        },
                                                                                        "kind": "init",
                                                                                        "method": false,
                                                                                        "shorthand": false
                                                                                    },
                                                                                    {
                                                                                        "type": "Property",
                                                                                        "key": {
                                                                                            "type": "Identifier",
                                                                                            "name": "y"
                                                                                        },
                                                                                        "computed": false,
                                                                                        "value": {
                                                                                            "type": "BinaryExpression",
                                                                                            "operator": "+",
                                                                                            "left": {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": false,
                                                                                                "object": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "obj"
                                                                                                },
                                                                                                "property": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "y"
                                                                                                }
                                                                                            },
                                                                                            "right": {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": false,
                                                                                                "object": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "obj"
                                                                                                },
                                                                                                "property": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "height"
                                                                                                }
                                                                                            }
                                                                                        },
                                                                                        "kind": "init",
                                                                                        "method": false,
                                                                                        "shorthand": false
                                                                                    }
                                                                                ]
                                                                            }
                                                                        ]
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "generator": false,
                                                        "expression": false,
                                                        "async": false
                                                    }
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "TOP"
                                                    },
                                                    "init": {
                                                        "type": "Literal",
                                                        "value": 0,
                                                        "raw": "0"
                                                    }
                                                }
                                            ],
                                            "kind": "const"
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "BOT"
                                                    },
                                                    "init": {
                                                        "type": "Literal",
                                                        "value": 1,
                                                        "raw": "1"
                                                    }
                                                }
                                            ],
                                            "kind": "const"
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "LEFT"
                                                    },
                                                    "init": {
                                                        "type": "Literal",
                                                        "value": 2,
                                                        "raw": "2"
                                                    }
                                                }
                                            ],
                                            "kind": "const"
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "RIGHT"
                                                    },
                                                    "init": {
                                                        "type": "Literal",
                                                        "value": 3,
                                                        "raw": "3"
                                                    }
                                                }
                                            ],
                                            "kind": "const"
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "hits"
                                                    },
                                                    "init": {
                                                        "type": "ArrayExpression",
                                                        "elements": [
                                                            {
                                                                "type": "ArrowFunctionExpression",
                                                                "id": null,
                                                                "params": [
                                                                    {
                                                                        "type": "Identifier",
                                                                        "name": "corners"
                                                                    }
                                                                ],
                                                                "body": {
                                                                    "type": "BlockStatement",
                                                                    "body": [
                                                                        {
                                                                            "type": "ReturnStatement",
                                                                            "argument": {
                                                                                "type": "BinaryExpression",
                                                                                "operator": "<",
                                                                                "left": {
                                                                                    "type": "CallExpression",
                                                                                    "callee": {
                                                                                        "type": "Identifier",
                                                                                        "name": "distance"
                                                                                    },
                                                                                    "arguments": [
                                                                                        {
                                                                                            "type": "Identifier",
                                                                                            "name": "p"
                                                                                        },
                                                                                        {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "corners"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Identifier",
                                                                                                "name": "TOP_LEFT"
                                                                                            }
                                                                                        },
                                                                                        {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "corners"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Identifier",
                                                                                                "name": "TOP_RIGHT"
                                                                                            }
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                "right": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": false,
                                                                                    "object": {
                                                                                        "type": "ThisExpression"
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Identifier",
                                                                                        "name": "radius"
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    ]
                                                                },
                                                                "generator": false,
                                                                "expression": false,
                                                                "async": false
                                                            },
                                                            {
                                                                "type": "ArrowFunctionExpression",
                                                                "id": null,
                                                                "params": [
                                                                    {
                                                                        "type": "Identifier",
                                                                        "name": "corners"
                                                                    }
                                                                ],
                                                                "body": {
                                                                    "type": "BlockStatement",
                                                                    "body": [
                                                                        {
                                                                            "type": "ReturnStatement",
                                                                            "argument": {
                                                                                "type": "BinaryExpression",
                                                                                "operator": "<",
                                                                                "left": {
                                                                                    "type": "CallExpression",
                                                                                    "callee": {
                                                                                        "type": "Identifier",
                                                                                        "name": "distance"
                                                                                    },
                                                                                    "arguments": [
                                                                                        {
                                                                                            "type": "Identifier",
                                                                                            "name": "p"
                                                                                        },
                                                                                        {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "corners"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Identifier",
                                                                                                "name": "BOT_LEFT"
                                                                                            }
                                                                                        },
                                                                                        {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "corners"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Identifier",
                                                                                                "name": "BOT_RIGHT"
                                                                                            }
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                "right": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": false,
                                                                                    "object": {
                                                                                        "type": "ThisExpression"
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Identifier",
                                                                                        "name": "radius"
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    ]
                                                                },
                                                                "generator": false,
                                                                "expression": false,
                                                                "async": false
                                                            },
                                                            {
                                                                "type": "ArrowFunctionExpression",
                                                                "id": null,
                                                                "params": [
                                                                    {
                                                                        "type": "Identifier",
                                                                        "name": "corners"
                                                                    }
                                                                ],
                                                                "body": {
                                                                    "type": "BlockStatement",
                                                                    "body": [
                                                                        {
                                                                            "type": "ReturnStatement",
                                                                            "argument": {
                                                                                "type": "BinaryExpression",
                                                                                "operator": "<",
                                                                                "left": {
                                                                                    "type": "CallExpression",
                                                                                    "callee": {
                                                                                        "type": "Identifier",
                                                                                        "name": "distance"
                                                                                    },
                                                                                    "arguments": [
                                                                                        {
                                                                                            "type": "Identifier",
                                                                                            "name": "p"
                                                                                        },
                                                                                        {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "corners"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Identifier",
                                                                                                "name": "TOP_LEFT"
                                                                                            }
                                                                                        },
                                                                                        {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "corners"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Identifier",
                                                                                                "name": "BOT_LEFT"
                                                                                            }
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                "right": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": false,
                                                                                    "object": {
                                                                                        "type": "ThisExpression"
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Identifier",
                                                                                        "name": "radius"
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    ]
                                                                },
                                                                "generator": false,
                                                                "expression": false,
                                                                "async": false
                                                            },
                                                            {
                                                                "type": "ArrowFunctionExpression",
                                                                "id": null,
                                                                "params": [
                                                                    {
                                                                        "type": "Identifier",
                                                                        "name": "corners"
                                                                    }
                                                                ],
                                                                "body": {
                                                                    "type": "BlockStatement",
                                                                    "body": [
                                                                        {
                                                                            "type": "ReturnStatement",
                                                                            "argument": {
                                                                                "type": "BinaryExpression",
                                                                                "operator": "<",
                                                                                "left": {
                                                                                    "type": "CallExpression",
                                                                                    "callee": {
                                                                                        "type": "Identifier",
                                                                                        "name": "distance"
                                                                                    },
                                                                                    "arguments": [
                                                                                        {
                                                                                            "type": "Identifier",
                                                                                            "name": "p"
                                                                                        },
                                                                                        {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "corners"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Identifier",
                                                                                                "name": "TOP_RIGHT"
                                                                                            }
                                                                                        },
                                                                                        {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "corners"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Identifier",
                                                                                                "name": "BOT_RIGHT"
                                                                                            }
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                "right": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": false,
                                                                                    "object": {
                                                                                        "type": "ThisExpression"
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Identifier",
                                                                                        "name": "radius"
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    ]
                                                                },
                                                                "generator": false,
                                                                "expression": false,
                                                                "async": false
                                                            }
                                                        ]
                                                    }
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "p"
                                                    },
                                                    "init": {
                                                        "type": "ObjectExpression",
                                                        "properties": [
                                                            {
                                                                "type": "Property",
                                                                "key": {
                                                                    "type": "Identifier",
                                                                    "name": "x"
                                                                },
                                                                "computed": false,
                                                                "value": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                        "type": "ThisExpression"
                                                                    },
                                                                    "property": {
                                                                        "type": "Identifier",
                                                                        "name": "x"
                                                                    }
                                                                },
                                                                "kind": "init",
                                                                "method": false,
                                                                "shorthand": false
                                                            },
                                                            {
                                                                "type": "Property",
                                                                "key": {
                                                                    "type": "Identifier",
                                                                    "name": "y"
                                                                },
                                                                "computed": false,
                                                                "value": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                        "type": "ThisExpression"
                                                                    },
                                                                    "property": {
                                                                        "type": "Identifier",
                                                                        "name": "y"
                                                                    }
                                                                },
                                                                "kind": "init",
                                                                "method": false,
                                                                "shorthand": false
                                                            }
                                                        ]
                                                    }
                                                }
                                            ],
                                            "kind": "let"
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "paddleCorners"
                                                    },
                                                    "init": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                            "type": "Identifier",
                                                            "name": "getCorners"
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "Identifier",
                                                                "name": "paddle"
                                                            }
                                                        ]
                                                    }
                                                }
                                            ],
                                            "kind": "let"
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "UpdateExpression",
                                                "operator": "--",
                                                "argument": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                            "type": "ThisExpression"
                                                        },
                                                        "property": {
                                                            "type": "Identifier",
                                                            "name": "collisionHandler"
                                                        }
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "paddleHitLock"
                                                    }
                                                },
                                                "prefix": false
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "UpdateExpression",
                                                "operator": "--",
                                                "argument": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                            "type": "ThisExpression"
                                                        },
                                                        "property": {
                                                            "type": "Identifier",
                                                            "name": "collisionHandler"
                                                        }
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "wallHitLock"
                                                    }
                                                },
                                                "prefix": false
                                            }
                                        },
                                        {
                                            "type": "IfStatement",
                                            "test": {
                                                "type": "BinaryExpression",
                                                "operator": "<=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                            "type": "ThisExpression"
                                                        },
                                                        "property": {
                                                            "type": "Identifier",
                                                            "name": "collisionHandler"
                                                        }
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "paddleHitLock"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": 0,
                                                    "raw": "0"
                                                }
                                            },
                                            "consequent": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "IfStatement",
                                                        "test": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "hits"
                                                                },
                                                                "property": {
                                                                    "type": "Identifier",
                                                                    "name": "TOP"
                                                                }
                                                            },
                                                            "arguments": [
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "paddleCorners"
                                                                }
                                                            ]
                                                        },
                                                        "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                            "type": "MemberExpression",
                                                                            "computed": false,
                                                                            "object": {
                                                                                "type": "ThisExpression"
                                                                            },
                                                                            "property": {
                                                                                "type": "Identifier",
                                                                                "name": "reflect"
                                                                            }
                                                                        },
                                                                        "arguments": [
                                                                            {
                                                                                "type": "Identifier",
                                                                                "name": "HORIZONTAL"
                                                                            }
                                                                        ]
                                                                    }
                                                                },
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "AssignmentExpression",
                                                                        "operator": "=",
                                                                        "left": {
                                                                            "type": "MemberExpression",
                                                                            "computed": false,
                                                                            "object": {
                                                                                "type": "MemberExpression",
                                                                                "computed": false,
                                                                                "object": {
                                                                                    "type": "ThisExpression"
                                                                                },
                                                                                "property": {
                                                                                    "type": "Identifier",
                                                                                    "name": "collisionHandler"
                                                                                }
                                                                            },
                                                                            "property": {
                                                                                "type": "Identifier",
                                                                                "name": "paddleHitLock"
                                                                            }
                                                                        },
                                                                        "right": {
                                                                            "type": "Literal",
                                                                            "value": 5,
                                                                            "raw": "5"
                                                                        }
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "alternate": null
                                                    },
                                                    {
                                                        "type": "IfStatement",
                                                        "test": {
                                                            "type": "LogicalExpression",
                                                            "operator": "||",
                                                            "left": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "hits"
                                                                    },
                                                                    "property": {
                                                                        "type": "Identifier",
                                                                        "name": "LEFT"
                                                                    }
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "Identifier",
                                                                        "name": "paddleCorners"
                                                                    }
                                                                ]
                                                            },
                                                            "right": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "hits"
                                                                    },
                                                                    "property": {
                                                                        "type": "Identifier",
                                                                        "name": "RIGHT"
                                                                    }
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "Identifier",
                                                                        "name": "paddleCorners"
                                                                    }
                                                                ]
                                                            }
                                                        },
                                                        "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                            "type": "MemberExpression",
                                                                            "computed": false,
                                                                            "object": {
                                                                                "type": "ThisExpression"
                                                                            },
                                                                            "property": {
                                                                                "type": "Identifier",
                                                                                "name": "reflect"
                                                                            }
                                                                        },
                                                                        "arguments": [
                                                                            {
                                                                                "type": "Identifier",
                                                                                "name": "VERTICAL"
                                                                            }
                                                                        ]
                                                                    }
                                                                },
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "AssignmentExpression",
                                                                        "operator": "=",
                                                                        "left": {
                                                                            "type": "MemberExpression",
                                                                            "computed": false,
                                                                            "object": {
                                                                                "type": "MemberExpression",
                                                                                "computed": false,
                                                                                "object": {
                                                                                    "type": "ThisExpression"
                                                                                },
                                                                                "property": {
                                                                                    "type": "Identifier",
                                                                                    "name": "collisionHandler"
                                                                                }
                                                                            },
                                                                            "property": {
                                                                                "type": "Identifier",
                                                                                "name": "paddleHitLock"
                                                                            }
                                                                        },
                                                                        "right": {
                                                                            "type": "Literal",
                                                                            "value": 5,
                                                                            "raw": "5"
                                                                        }
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "alternate": null
                                                    }
                                                ]
                                            },
                                            "alternate": null
                                        },
                                        {
                                            "type": "ForStatement",
                                            "init": {
                                                "type": "VariableDeclaration",
                                                "declarations": [
                                                    {
                                                        "type": "VariableDeclarator",
                                                        "id": {
                                                            "type": "Identifier",
                                                            "name": "i"
                                                        },
                                                        "init": {
                                                            "type": "Literal",
                                                            "value": 0,
                                                            "raw": "0"
                                                        }
                                                    }
                                                ],
                                                "kind": "let"
                                            },
                                            "test": {
                                                "type": "BinaryExpression",
                                                "operator": "<",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "i"
                                                },
                                                "right": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                            "type": "Identifier",
                                                            "name": "blocks"
                                                        },
                                                        "property": {
                                                            "type": "Identifier",
                                                            "name": "blocks"
                                                        }
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "length"
                                                    }
                                                }
                                            },
                                            "update": {
                                                "type": "UpdateExpression",
                                                "operator": "++",
                                                "argument": {
                                                    "type": "Identifier",
                                                    "name": "i"
                                                },
                                                "prefix": false
                                            },
                                            "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "VariableDeclaration",
                                                        "declarations": [
                                                            {
                                                                "type": "VariableDeclarator",
                                                                "id": {
                                                                    "type": "Identifier",
                                                                    "name": "blockCorners"
                                                                },
                                                                "init": {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                        "type": "Identifier",
                                                                        "name": "getCorners"
                                                                    },
                                                                    "arguments": [
                                                                        {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                                "type": "MemberExpression",
                                                                                "computed": false,
                                                                                "object": {
                                                                                    "type": "Identifier",
                                                                                    "name": "blocks"
                                                                                },
                                                                                "property": {
                                                                                    "type": "Identifier",
                                                                                    "name": "blocks"
                                                                                }
                                                                            },
                                                                            "property": {
                                                                                "type": "Identifier",
                                                                                "name": "i"
                                                                            }
                                                                        }
                                                                    ]
                                                                }
                                                            }
                                                        ],
                                                        "kind": "let"
                                                    },
                                                    {
                                                        "type": "IfStatement",
                                                        "test": {
                                                            "type": "LogicalExpression",
                                                            "operator": "||",
                                                            "left": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "hits"
                                                                    },
                                                                    "property": {
                                                                        "type": "Identifier",
                                                                        "name": "TOP"
                                                                    }
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "Identifier",
                                                                        "name": "blockCorners"
                                                                    }
                                                                ]
                                                            },
                                                            "right": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "hits"
                                                                    },
                                                                    "property": {
                                                                        "type": "Identifier",
                                                                        "name": "BOT"
                                                                    }
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "Identifier",
                                                                        "name": "blockCorners"
                                                                    }
                                                                ]
                                                            }
                                                        },
                                                        "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                            "type": "MemberExpression",
                                                                            "computed": false,
                                                                            "object": {
                                                                                "type": "Identifier",
                                                                                "name": "blocks"
                                                                            },
                                                                            "property": {
                                                                                "type": "Identifier",
                                                                                "name": "scoreBlock"
                                                                            }
                                                                        },
                                                                        "arguments": [
                                                                            {
                                                                                "type": "Identifier",
                                                                                "name": "i"
                                                                            }
                                                                        ]
                                                                    }
                                                                },
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                            "type": "MemberExpression",
                                                                            "computed": false,
                                                                            "object": {
                                                                                "type": "ThisExpression"
                                                                            },
                                                                            "property": {
                                                                                "type": "Identifier",
                                                                                "name": "reflect"
                                                                            }
                                                                        },
                                                                        "arguments": [
                                                                            {
                                                                                "type": "Identifier",
                                                                                "name": "HORIZONTAL"
                                                                            }
                                                                        ]
                                                                    }
                                                                },
                                                                {
                                                                    "type": "BreakStatement",
                                                                    "label": null
                                                                }
                                                            ]
                                                        },
                                                        "alternate": null
                                                    },
                                                    {
                                                        "type": "IfStatement",
                                                        "test": {
                                                            "type": "LogicalExpression",
                                                            "operator": "||",
                                                            "left": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "hits"
                                                                    },
                                                                    "property": {
                                                                        "type": "Identifier",
                                                                        "name": "LEFT"
                                                                    }
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "Identifier",
                                                                        "name": "blockCorners"
                                                                    }
                                                                ]
                                                            },
                                                            "right": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "hits"
                                                                    },
                                                                    "property": {
                                                                        "type": "Identifier",
                                                                        "name": "RIGHT"
                                                                    }
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "Identifier",
                                                                        "name": "blockCorners"
                                                                    }
                                                                ]
                                                            }
                                                        },
                                                        "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                            "type": "MemberExpression",
                                                                            "computed": false,
                                                                            "object": {
                                                                                "type": "Identifier",
                                                                                "name": "blocks"
                                                                            },
                                                                            "property": {
                                                                                "type": "Identifier",
                                                                                "name": "scoreBlock"
                                                                            }
                                                                        },
                                                                        "arguments": [
                                                                            {
                                                                                "type": "Identifier",
                                                                                "name": "i"
                                                                            }
                                                                        ]
                                                                    }
                                                                },
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                            "type": "MemberExpression",
                                                                            "computed": false,
                                                                            "object": {
                                                                                "type": "ThisExpression"
                                                                            },
                                                                            "property": {
                                                                                "type": "Identifier",
                                                                                "name": "reflect"
                                                                            }
                                                                        },
                                                                        "arguments": [
                                                                            {
                                                                                "type": "Identifier",
                                                                                "name": "VERTICAL"
                                                                            }
                                                                        ]
                                                                    }
                                                                },
                                                                {
                                                                    "type": "BreakStatement",
                                                                    "label": null
                                                                }
                                                            ]
                                                        },
                                                        "alternate": null
                                                    }
                                                ]
                                            }
                                        },
                                        {
                                            "type": "IfStatement",
                                            "test": {
                                                "type": "BinaryExpression",
                                                "operator": "<=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                            "type": "ThisExpression"
                                                        },
                                                        "property": {
                                                            "type": "Identifier",
                                                            "name": "collisionHandler"
                                                        }
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "wallHitLock"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": 0,
                                                    "raw": "0"
                                                }
                                            },
                                            "consequent": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "IfStatement",
                                                        "test": {
                                                            "type": "LogicalExpression",
                                                            "operator": "||",
                                                            "left": {
                                                                "type": "BinaryExpression",
                                                                "operator": "<=",
                                                                "left": {
                                                                    "type": "BinaryExpression",
                                                                    "operator": "-",
                                                                    "left": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                            "type": "ThisExpression"
                                                                        },
                                                                        "property": {
                                                                            "type": "Identifier",
                                                                            "name": "x"
                                                                        }
                                                                    },
                                                                    "right": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                            "type": "ThisExpression"
                                                                        },
                                                                        "property": {
                                                                            "type": "Identifier",
                                                                            "name": "radius"
                                                                        }
                                                                    }
                                                                },
                                                                "right": {
                                                                    "type": "Literal",
                                                                    "value": 0,
                                                                    "raw": "0"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "BinaryExpression",
                                                                "operator": ">=",
                                                                "left": {
                                                                    "type": "BinaryExpression",
                                                                    "operator": "+",
                                                                    "left": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                            "type": "ThisExpression"
                                                                        },
                                                                        "property": {
                                                                            "type": "Identifier",
                                                                            "name": "x"
                                                                        }
                                                                    },
                                                                    "right": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                            "type": "ThisExpression"
                                                                        },
                                                                        "property": {
                                                                            "type": "Identifier",
                                                                            "name": "radius"
                                                                        }
                                                                    }
                                                                },
                                                                "right": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "canvas"
                                                                    },
                                                                    "property": {
                                                                        "type": "Identifier",
                                                                        "name": "width"
                                                                    }
                                                                }
                                                            }
                                                        },
                                                        "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                            "type": "MemberExpression",
                                                                            "computed": false,
                                                                            "object": {
                                                                                "type": "ThisExpression"
                                                                            },
                                                                            "property": {
                                                                                "type": "Identifier",
                                                                                "name": "reflect"
                                                                            }
                                                                        },
                                                                        "arguments": [
                                                                            {
                                                                                "type": "Identifier",
                                                                                "name": "VERTICAL"
                                                                            }
                                                                        ]
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "alternate": null
                                                    },
                                                    {
                                                        "type": "IfStatement",
                                                        "test": {
                                                            "type": "BinaryExpression",
                                                            "operator": "<=",
                                                            "left": {
                                                                "type": "BinaryExpression",
                                                                "operator": "+",
                                                                "left": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                        "type": "ThisExpression"
                                                                    },
                                                                    "property": {
                                                                        "type": "Identifier",
                                                                        "name": "y"
                                                                    }
                                                                },
                                                                "right": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                        "type": "ThisExpression"
                                                                    },
                                                                    "property": {
                                                                        "type": "Identifier",
                                                                        "name": "radius"
                                                                    }
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "Literal",
                                                                "value": 0,
                                                                "raw": "0"
                                                            }
                                                        },
                                                        "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                            "type": "MemberExpression",
                                                                            "computed": false,
                                                                            "object": {
                                                                                "type": "ThisExpression"
                                                                            },
                                                                            "property": {
                                                                                "type": "Identifier",
                                                                                "name": "reflect"
                                                                            }
                                                                        },
                                                                        "arguments": [
                                                                            {
                                                                                "type": "Identifier",
                                                                                "name": "HORIZONTAL"
                                                                            }
                                                                        ]
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "alternate": null
                                                    }
                                                ]
                                            },
                                            "alternate": null
                                        }
                                    ]
                                },
                                "generator": false,
                                "expression": false,
                                "async": false
                            }
                        }
                    },
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "AssignmentExpression",
                            "operator": "=",
                            "left": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                    "type": "ThisExpression"
                                },
                                "property": {
                                    "type": "Identifier",
                                    "name": "draw"
                                }
                            },
                            "right": {
                                "type": "FunctionExpression",
                                "id": null,
                                "params": [],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "CallExpression",
                                                "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "ctx"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "beginPath"
                                                    }
                                                },
                                                "arguments": []
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "CallExpression",
                                                "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "ctx"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "arc"
                                                    }
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                            "type": "ThisExpression"
                                                        },
                                                        "property": {
                                                            "type": "Identifier",
                                                            "name": "x"
                                                        }
                                                    },
                                                    {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                            "type": "ThisExpression"
                                                        },
                                                        "property": {
                                                            "type": "Identifier",
                                                            "name": "y"
                                                        }
                                                    },
                                                    {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                            "type": "ThisExpression"
                                                        },
                                                        "property": {
                                                            "type": "Identifier",
                                                            "name": "radius"
                                                        }
                                                    },
                                                    {
                                                        "type": "Literal",
                                                        "value": 0,
                                                        "raw": "0"
                                                    },
                                                    {
                                                        "type": "BinaryExpression",
                                                        "operator": "*",
                                                        "left": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                                "type": "Identifier",
                                                                "name": "Math"
                                                            },
                                                            "property": {
                                                                "type": "Identifier",
                                                                "name": "PI"
                                                            }
                                                        },
                                                        "right": {
                                                            "type": "Literal",
                                                            "value": 2,
                                                            "raw": "2"
                                                        }
                                                    },
                                                    {
                                                        "type": "Literal",
                                                        "value": false,
                                                        "raw": "false"
                                                    }
                                                ]
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "ctx"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "fillStyle"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Identifier",
                                                    "name": "COLOR"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "CallExpression",
                                                "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "ctx"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "fill"
                                                    }
                                                },
                                                "arguments": []
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "CallExpression",
                                                "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "ctx"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "closePath"
                                                    }
                                                },
                                                "arguments": []
                                            }
                                        }
                                    ]
                                },
                                "generator": false,
                                "expression": false,
                                "async": false
                            }
                        }
                    }
                ]
            },
            "generator": false,
            "expression": false,
            "async": false
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "AssignmentExpression",
                "operator": "=",
                "left": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                        "type": "Identifier",
                        "name": "Ball"
                    },
                    "property": {
                        "type": "Identifier",
                        "name": "prototype"
                    }
                },
                "right": {
                    "type": "CallExpression",
                    "callee": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                            "type": "Identifier",
                            "name": "Object"
                        },
                        "property": {
                            "type": "Identifier",
                            "name": "create"
                        }
                    },
                    "arguments": [
                        {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                                "type": "Identifier",
                                "name": "GameObject"
                            },
                            "property": {
                                "type": "Identifier",
                                "name": "prototype"
                            }
                        }
                    ]
                }
            }
        },
        {
            "type": "FunctionDeclaration",
            "id": {
                "type": "Identifier",
                "name": "HeaderLabel"
            },
            "params": [
                {
                    "type": "Identifier",
                    "name": "label"
                }
            ],
            "body": {
                "type": "BlockStatement",
                "body": [
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "CallExpression",
                            "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                    "type": "Identifier",
                                    "name": "GameObject"
                                },
                                "property": {
                                    "type": "Identifier",
                                    "name": "call"
                                }
                            },
                            "arguments": [
                                {
                                    "type": "ThisExpression"
                                }
                            ]
                        }
                    },
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "AssignmentExpression",
                            "operator": "=",
                            "left": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                    "type": "ThisExpression"
                                },
                                "property": {
                                    "type": "Identifier",
                                    "name": "label"
                                }
                            },
                            "right": {
                                "type": "Identifier",
                                "name": "label"
                            }
                        }
                    },
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "AssignmentExpression",
                            "operator": "=",
                            "left": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                    "type": "ThisExpression"
                                },
                                "property": {
                                    "type": "Identifier",
                                    "name": "draw"
                                }
                            },
                            "right": {
                                "type": "FunctionExpression",
                                "id": null,
                                "params": [],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "ctx"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "font"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": "20px Arial",
                                                    "raw": "\"20px Arial\""
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "CallExpression",
                                                "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "ctx"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "fillText"
                                                    }
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "BinaryExpression",
                                                        "operator": "+",
                                                        "left": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                                "type": "ThisExpression"
                                                            },
                                                            "property": {
                                                                "type": "Identifier",
                                                                "name": "label"
                                                            }
                                                        },
                                                        "right": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                                "type": "Identifier",
                                                                "name": "game"
                                                            },
                                                            "property": {
                                                                "type": "Identifier",
                                                                "name": "score"
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                            "type": "ThisExpression"
                                                        },
                                                        "property": {
                                                            "type": "Identifier",
                                                            "name": "x"
                                                        }
                                                    },
                                                    {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                            "type": "ThisExpression"
                                                        },
                                                        "property": {
                                                            "type": "Identifier",
                                                            "name": "y"
                                                        }
                                                    }
                                                ]
                                            }
                                        }
                                    ]
                                },
                                "generator": false,
                                "expression": false,
                                "async": false
                            }
                        }
                    }
                ]
            },
            "generator": false,
            "expression": false,
            "async": false
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "AssignmentExpression",
                "operator": "=",
                "left": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                        "type": "Identifier",
                        "name": "HeaderLabel"
                    },
                    "property": {
                        "type": "Identifier",
                        "name": "prototype"
                    }
                },
                "right": {
                    "type": "CallExpression",
                    "callee": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                            "type": "Identifier",
                            "name": "Object"
                        },
                        "property": {
                            "type": "Identifier",
                            "name": "create"
                        }
                    },
                    "arguments": [
                        {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                                "type": "Identifier",
                                "name": "GameObject"
                            },
                            "property": {
                                "type": "Identifier",
                                "name": "prototype"
                            }
                        }
                    ]
                }
            }
        },
        {
            "type": "FunctionDeclaration",
            "id": {
                "type": "Identifier",
                "name": "Paddle"
            },
            "params": [],
            "body": {
                "type": "BlockStatement",
                "body": [
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "CallExpression",
                            "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                    "type": "Identifier",
                                    "name": "RectObject"
                                },
                                "property": {
                                    "type": "Identifier",
                                    "name": "call"
                                }
                            },
                            "arguments": [
                                {
                                    "type": "ThisExpression"
                                },
                                {
                                    "type": "Literal",
                                    "value": 80,
                                    "raw": "80"
                                },
                                {
                                    "type": "Literal",
                                    "value": 10,
                                    "raw": "10"
                                }
                            ]
                        }
                    },
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "AssignmentExpression",
                            "operator": "=",
                            "left": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                    "type": "ThisExpression"
                                },
                                "property": {
                                    "type": "Identifier",
                                    "name": "speed"
                                }
                            },
                            "right": {
                                "type": "Literal",
                                "value": 4,
                                "raw": "4"
                            }
                        }
                    },
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "AssignmentExpression",
                            "operator": "=",
                            "left": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                    "type": "ThisExpression"
                                },
                                "property": {
                                    "type": "Identifier",
                                    "name": "rightDown"
                                }
                            },
                            "right": {
                                "type": "Literal",
                                "value": false,
                                "raw": "false"
                            }
                        }
                    },
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "AssignmentExpression",
                            "operator": "=",
                            "left": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                    "type": "ThisExpression"
                                },
                                "property": {
                                    "type": "Identifier",
                                    "name": "leftDown"
                                }
                            },
                            "right": {
                                "type": "Literal",
                                "value": false,
                                "raw": "false"
                            }
                        }
                    },
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "AssignmentExpression",
                            "operator": "=",
                            "left": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                    "type": "ThisExpression"
                                },
                                "property": {
                                    "type": "Identifier",
                                    "name": "hit"
                                }
                            },
                            "right": {
                                "type": "Literal",
                                "value": false,
                                "raw": "false"
                            }
                        }
                    },
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "AssignmentExpression",
                            "operator": "=",
                            "left": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                    "type": "ThisExpression"
                                },
                                "property": {
                                    "type": "Identifier",
                                    "name": "update"
                                }
                            },
                            "right": {
                                "type": "FunctionExpression",
                                "id": null,
                                "params": [],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "IfStatement",
                                            "test": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                    "type": "ThisExpression"
                                                },
                                                "property": {
                                                    "type": "Identifier",
                                                    "name": "rightDown"
                                                }
                                            },
                                            "consequent": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "IfStatement",
                                                        "test": {
                                                            "type": "BinaryExpression",
                                                            "operator": "<=",
                                                            "left": {
                                                                "type": "BinaryExpression",
                                                                "operator": "+",
                                                                "left": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                        "type": "ThisExpression"
                                                                    },
                                                                    "property": {
                                                                        "type": "Identifier",
                                                                        "name": "x"
                                                                    }
                                                                },
                                                                "right": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                        "type": "ThisExpression"
                                                                    },
                                                                    "property": {
                                                                        "type": "Identifier",
                                                                        "name": "width"
                                                                    }
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "canvas"
                                                                },
                                                                "property": {
                                                                    "type": "Identifier",
                                                                    "name": "width"
                                                                }
                                                            }
                                                        },
                                                        "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "AssignmentExpression",
                                                                        "operator": "+=",
                                                                        "left": {
                                                                            "type": "MemberExpression",
                                                                            "computed": false,
                                                                            "object": {
                                                                                "type": "ThisExpression"
                                                                            },
                                                                            "property": {
                                                                                "type": "Identifier",
                                                                                "name": "x"
                                                                            }
                                                                        },
                                                                        "right": {
                                                                            "type": "BinaryExpression",
                                                                            "operator": "*",
                                                                            "left": {
                                                                                "type": "MemberExpression",
                                                                                "computed": false,
                                                                                "object": {
                                                                                    "type": "Identifier",
                                                                                    "name": "game"
                                                                                },
                                                                                "property": {
                                                                                    "type": "Identifier",
                                                                                    "name": "speed"
                                                                                }
                                                                            },
                                                                            "right": {
                                                                                "type": "MemberExpression",
                                                                                "computed": false,
                                                                                "object": {
                                                                                    "type": "ThisExpression"
                                                                                },
                                                                                "property": {
                                                                                    "type": "Identifier",
                                                                                    "name": "speed"
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "alternate": null
                                                    }
                                                ]
                                            },
                                            "alternate": null
                                        },
                                        {
                                            "type": "IfStatement",
                                            "test": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                    "type": "ThisExpression"
                                                },
                                                "property": {
                                                    "type": "Identifier",
                                                    "name": "leftDown"
                                                }
                                            },
                                            "consequent": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "IfStatement",
                                                        "test": {
                                                            "type": "BinaryExpression",
                                                            "operator": ">=",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                    "type": "ThisExpression"
                                                                },
                                                                "property": {
                                                                    "type": "Identifier",
                                                                    "name": "x"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "Literal",
                                                                "value": 0,
                                                                "raw": "0"
                                                            }
                                                        },
                                                        "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "AssignmentExpression",
                                                                        "operator": "-=",
                                                                        "left": {
                                                                            "type": "MemberExpression",
                                                                            "computed": false,
                                                                            "object": {
                                                                                "type": "ThisExpression"
                                                                            },
                                                                            "property": {
                                                                                "type": "Identifier",
                                                                                "name": "x"
                                                                            }
                                                                        },
                                                                        "right": {
                                                                            "type": "BinaryExpression",
                                                                            "operator": "*",
                                                                            "left": {
                                                                                "type": "MemberExpression",
                                                                                "computed": false,
                                                                                "object": {
                                                                                    "type": "Identifier",
                                                                                    "name": "game"
                                                                                },
                                                                                "property": {
                                                                                    "type": "Identifier",
                                                                                    "name": "speed"
                                                                                }
                                                                            },
                                                                            "right": {
                                                                                "type": "MemberExpression",
                                                                                "computed": false,
                                                                                "object": {
                                                                                    "type": "ThisExpression"
                                                                                },
                                                                                "property": {
                                                                                    "type": "Identifier",
                                                                                    "name": "speed"
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "alternate": null
                                                    }
                                                ]
                                            },
                                            "alternate": null
                                        }
                                    ]
                                },
                                "generator": false,
                                "expression": false,
                                "async": false
                            }
                        }
                    }
                ]
            },
            "generator": false,
            "expression": false,
            "async": false
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "AssignmentExpression",
                "operator": "=",
                "left": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                        "type": "Identifier",
                        "name": "Paddle"
                    },
                    "property": {
                        "type": "Identifier",
                        "name": "prototype"
                    }
                },
                "right": {
                    "type": "CallExpression",
                    "callee": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                            "type": "Identifier",
                            "name": "Object"
                        },
                        "property": {
                            "type": "Identifier",
                            "name": "create"
                        }
                    },
                    "arguments": [
                        {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                                "type": "Identifier",
                                "name": "RectObject"
                            },
                            "property": {
                                "type": "Identifier",
                                "name": "prototype"
                            }
                        }
                    ]
                }
            }
        },
        {
            "type": "FunctionDeclaration",
            "id": {
                "type": "Identifier",
                "name": "BounceBall"
            },
            "params": [],
            "body": {
                "type": "BlockStatement",
                "body": [
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "AssignmentExpression",
                            "operator": "=",
                            "left": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                    "type": "ThisExpression"
                                },
                                "property": {
                                    "type": "Identifier",
                                    "name": "score"
                                }
                            },
                            "right": {
                                "type": "Literal",
                                "value": 0,
                                "raw": "0"
                            }
                        }
                    },
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "AssignmentExpression",
                            "operator": "=",
                            "left": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                    "type": "ThisExpression"
                                },
                                "property": {
                                    "type": "Identifier",
                                    "name": "speed"
                                }
                            },
                            "right": {
                                "type": "Literal",
                                "value": 2,
                                "raw": "2.0"
                            }
                        }
                    },
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "AssignmentExpression",
                            "operator": "=",
                            "left": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                    "type": "ThisExpression"
                                },
                                "property": {
                                    "type": "Identifier",
                                    "name": "update"
                                }
                            },
                            "right": {
                                "type": "FunctionExpression",
                                "id": null,
                                "params": [],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "+=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "speed"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": 0.0006,
                                                    "raw": "0.0006"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "CallExpression",
                                                "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "ball"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "update"
                                                    }
                                                },
                                                "arguments": []
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "CallExpression",
                                                "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "paddle"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "update"
                                                    }
                                                },
                                                "arguments": []
                                            }
                                        },
                                        {
                                            "type": "IfStatement",
                                            "test": {
                                                "type": "CallExpression",
                                                "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "blocks"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "isEmpty"
                                                    }
                                                },
                                                "arguments": []
                                            },
                                            "consequent": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "blocks"
                                                                },
                                                                "property": {
                                                                    "type": "Identifier",
                                                                    "name": "initBlocks"
                                                                }
                                                            },
                                                            "arguments": []
                                                        }
                                                    }
                                                ]
                                            },
                                            "alternate": null
                                        }
                                    ]
                                },
                                "generator": false,
                                "expression": false,
                                "async": false
                            }
                        }
                    },
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "AssignmentExpression",
                            "operator": "=",
                            "left": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                    "type": "ThisExpression"
                                },
                                "property": {
                                    "type": "Identifier",
                                    "name": "loose"
                                }
                            },
                            "right": {
                                "type": "FunctionExpression",
                                "id": null,
                                "params": [],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "CallExpression",
                                                "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                            "type": "Identifier",
                                                            "name": "document"
                                                        },
                                                        "property": {
                                                            "type": "Identifier",
                                                            "name": "location"
                                                        }
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "reload"
                                                    }
                                                },
                                                "arguments": []
                                            }
                                        }
                                    ]
                                },
                                "generator": false,
                                "expression": false,
                                "async": false
                            }
                        }
                    }
                ]
            },
            "generator": false,
            "expression": false,
            "async": false
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "game"
                    },
                    "init": {
                        "type": "NewExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "BounceBall"
                        },
                        "arguments": []
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "blocks"
                    },
                    "init": {
                        "type": "NewExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "BlockList"
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": 2,
                                "raw": "2"
                            },
                            {
                                "type": "Literal",
                                "value": 4,
                                "raw": "4"
                            }
                        ]
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                        "type": "Identifier",
                        "name": "blocks"
                    },
                    "property": {
                        "type": "Identifier",
                        "name": "init"
                    }
                },
                "arguments": [
                    {
                        "type": "Literal",
                        "value": 20,
                        "raw": "20"
                    },
                    {
                        "type": "Literal",
                        "value": 40,
                        "raw": "40"
                    }
                ]
            }
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "ball"
                    },
                    "init": {
                        "type": "NewExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "Ball"
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": 12,
                                "raw": "12"
                            }
                        ]
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                        "type": "Identifier",
                        "name": "ball"
                    },
                    "property": {
                        "type": "Identifier",
                        "name": "init"
                    }
                },
                "arguments": [
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "rand"
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": 60,
                                "raw": "60"
                            },
                            {
                                "type": "BinaryExpression",
                                "operator": "-",
                                "left": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                        "type": "Identifier",
                                        "name": "canvas"
                                    },
                                    "property": {
                                        "type": "Identifier",
                                        "name": "width"
                                    }
                                },
                                "right": {
                                    "type": "Literal",
                                    "value": 60,
                                    "raw": "60"
                                }
                            }
                        ]
                    },
                    {
                        "type": "Literal",
                        "value": 140,
                        "raw": "140"
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                        "type": "Identifier",
                        "name": "ball"
                    },
                    "property": {
                        "type": "Identifier",
                        "name": "startMoving"
                    }
                },
                "arguments": [
                    {
                        "type": "Literal",
                        "value": 2,
                        "raw": "2"
                    },
                    {
                        "type": "Literal",
                        "value": 2,
                        "raw": "2"
                    }
                ]
            }
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "labels"
                    },
                    "init": {
                        "type": "NewExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "HeaderLabel"
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": "Score: ",
                                "raw": "\"Score: \""
                            }
                        ]
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                        "type": "Identifier",
                        "name": "labels"
                    },
                    "property": {
                        "type": "Identifier",
                        "name": "init"
                    }
                },
                "arguments": [
                    {
                        "type": "Literal",
                        "value": 20,
                        "raw": "20"
                    },
                    {
                        "type": "Literal",
                        "value": 25,
                        "raw": "25"
                    }
                ]
            }
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "paddle"
                    },
                    "init": {
                        "type": "NewExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "Paddle"
                        },
                        "arguments": []
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                        "type": "Identifier",
                        "name": "paddle"
                    },
                    "property": {
                        "type": "Identifier",
                        "name": "init"
                    }
                },
                "arguments": [
                    {
                        "type": "BinaryExpression",
                        "operator": "-",
                        "left": {
                            "type": "BinaryExpression",
                            "operator": "/",
                            "left": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                    "type": "Identifier",
                                    "name": "canvas"
                                },
                                "property": {
                                    "type": "Identifier",
                                    "name": "width"
                                }
                            },
                            "right": {
                                "type": "Literal",
                                "value": 2,
                                "raw": "2"
                            }
                        },
                        "right": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                                "type": "Identifier",
                                "name": "paddle"
                            },
                            "property": {
                                "type": "Identifier",
                                "name": "width"
                            }
                        }
                    },
                    {
                        "type": "BinaryExpression",
                        "operator": "-",
                        "left": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                                "type": "Identifier",
                                "name": "canvas"
                            },
                            "property": {
                                "type": "Identifier",
                                "name": "height"
                            }
                        },
                        "right": {
                            "type": "Literal",
                            "value": 20,
                            "raw": "20"
                        }
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                        "type": "Identifier",
                        "name": "document"
                    },
                    "property": {
                        "type": "Identifier",
                        "name": "addEventListener"
                    }
                },
                "arguments": [
                    {
                        "type": "Literal",
                        "value": "keydown",
                        "raw": "'keydown'"
                    },
                    {
                        "type": "FunctionExpression",
                        "id": null,
                        "params": [
                            {
                                "type": "Identifier",
                                "name": "event"
                            }
                        ],
                        "body": {
                            "type": "BlockStatement",
                            "body": [
                                {
                                    "type": "IfStatement",
                                    "test": {
                                        "type": "BinaryExpression",
                                        "operator": "===",
                                        "left": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                                "type": "Identifier",
                                                "name": "event"
                                            },
                                            "property": {
                                                "type": "Identifier",
                                                "name": "key"
                                            }
                                        },
                                        "right": {
                                            "type": "Literal",
                                            "value": "ArrowRight",
                                            "raw": "\"ArrowRight\""
                                        }
                                    },
                                    "consequent": {
                                        "type": "BlockStatement",
                                        "body": [
                                            {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                    "type": "AssignmentExpression",
                                                    "operator": "=",
                                                    "left": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                            "type": "Identifier",
                                                            "name": "paddle"
                                                        },
                                                        "property": {
                                                            "type": "Identifier",
                                                            "name": "rightDown"
                                                        }
                                                    },
                                                    "right": {
                                                        "type": "Literal",
                                                        "value": true,
                                                        "raw": "true"
                                                    }
                                                }
                                            }
                                        ]
                                    },
                                    "alternate": {
                                        "type": "IfStatement",
                                        "test": {
                                            "type": "BinaryExpression",
                                            "operator": "===",
                                            "left": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                    "type": "Identifier",
                                                    "name": "event"
                                                },
                                                "property": {
                                                    "type": "Identifier",
                                                    "name": "key"
                                                }
                                            },
                                            "right": {
                                                "type": "Literal",
                                                "value": "ArrowLeft",
                                                "raw": "\"ArrowLeft\""
                                            }
                                        },
                                        "consequent": {
                                            "type": "BlockStatement",
                                            "body": [
                                                {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                        "type": "AssignmentExpression",
                                                        "operator": "=",
                                                        "left": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                                "type": "Identifier",
                                                                "name": "paddle"
                                                            },
                                                            "property": {
                                                                "type": "Identifier",
                                                                "name": "leftDown"
                                                            }
                                                        },
                                                        "right": {
                                                            "type": "Literal",
                                                            "value": true,
                                                            "raw": "true"
                                                        }
                                                    }
                                                }
                                            ]
                                        },
                                        "alternate": null
                                    }
                                }
                            ]
                        },
                        "generator": false,
                        "expression": false,
                        "async": false
                    },
                    {
                        "type": "Literal",
                        "value": false,
                        "raw": "false"
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                        "type": "Identifier",
                        "name": "document"
                    },
                    "property": {
                        "type": "Identifier",
                        "name": "addEventListener"
                    }
                },
                "arguments": [
                    {
                        "type": "Literal",
                        "value": "keyup",
                        "raw": "'keyup'"
                    },
                    {
                        "type": "FunctionExpression",
                        "id": null,
                        "params": [
                            {
                                "type": "Identifier",
                                "name": "event"
                            }
                        ],
                        "body": {
                            "type": "BlockStatement",
                            "body": [
                                {
                                    "type": "IfStatement",
                                    "test": {
                                        "type": "BinaryExpression",
                                        "operator": "===",
                                        "left": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                                "type": "Identifier",
                                                "name": "event"
                                            },
                                            "property": {
                                                "type": "Identifier",
                                                "name": "key"
                                            }
                                        },
                                        "right": {
                                            "type": "Literal",
                                            "value": "ArrowRight",
                                            "raw": "\"ArrowRight\""
                                        }
                                    },
                                    "consequent": {
                                        "type": "BlockStatement",
                                        "body": [
                                            {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                    "type": "AssignmentExpression",
                                                    "operator": "=",
                                                    "left": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                            "type": "Identifier",
                                                            "name": "paddle"
                                                        },
                                                        "property": {
                                                            "type": "Identifier",
                                                            "name": "rightDown"
                                                        }
                                                    },
                                                    "right": {
                                                        "type": "Literal",
                                                        "value": false,
                                                        "raw": "false"
                                                    }
                                                }
                                            }
                                        ]
                                    },
                                    "alternate": {
                                        "type": "IfStatement",
                                        "test": {
                                            "type": "BinaryExpression",
                                            "operator": "===",
                                            "left": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                    "type": "Identifier",
                                                    "name": "event"
                                                },
                                                "property": {
                                                    "type": "Identifier",
                                                    "name": "key"
                                                }
                                            },
                                            "right": {
                                                "type": "Literal",
                                                "value": "ArrowLeft",
                                                "raw": "\"ArrowLeft\""
                                            }
                                        },
                                        "consequent": {
                                            "type": "BlockStatement",
                                            "body": [
                                                {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                        "type": "AssignmentExpression",
                                                        "operator": "=",
                                                        "left": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                                "type": "Identifier",
                                                                "name": "paddle"
                                                            },
                                                            "property": {
                                                                "type": "Identifier",
                                                                "name": "leftDown"
                                                            }
                                                        },
                                                        "right": {
                                                            "type": "Literal",
                                                            "value": false,
                                                            "raw": "false"
                                                        }
                                                    }
                                                }
                                            ]
                                        },
                                        "alternate": null
                                    }
                                }
                            ]
                        },
                        "generator": false,
                        "expression": false,
                        "async": false
                    },
                    {
                        "type": "Literal",
                        "value": false,
                        "raw": "false"
                    }
                ]
            }
        },
        {
            "type": "FunctionDeclaration",
            "id": {
                "type": "Identifier",
                "name": "draw"
            },
            "params": [],
            "body": {
                "type": "BlockStatement",
                "body": [
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "CallExpression",
                            "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                    "type": "Identifier",
                                    "name": "ctx"
                                },
                                "property": {
                                    "type": "Identifier",
                                    "name": "clearRect"
                                }
                            },
                            "arguments": [
                                {
                                    "type": "Literal",
                                    "value": 0,
                                    "raw": "0"
                                },
                                {
                                    "type": "Literal",
                                    "value": 0,
                                    "raw": "0"
                                },
                                {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                        "type": "Identifier",
                                        "name": "canvas"
                                    },
                                    "property": {
                                        "type": "Identifier",
                                        "name": "width"
                                    }
                                },
                                {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                        "type": "Identifier",
                                        "name": "canvas"
                                    },
                                    "property": {
                                        "type": "Identifier",
                                        "name": "height"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "CallExpression",
                            "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                    "type": "Identifier",
                                    "name": "labels"
                                },
                                "property": {
                                    "type": "Identifier",
                                    "name": "draw"
                                }
                            },
                            "arguments": []
                        }
                    },
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "CallExpression",
                            "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                    "type": "Identifier",
                                    "name": "blocks"
                                },
                                "property": {
                                    "type": "Identifier",
                                    "name": "draw"
                                }
                            },
                            "arguments": []
                        }
                    },
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "CallExpression",
                            "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                    "type": "Identifier",
                                    "name": "ball"
                                },
                                "property": {
                                    "type": "Identifier",
                                    "name": "draw"
                                }
                            },
                            "arguments": []
                        }
                    },
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "CallExpression",
                            "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                    "type": "Identifier",
                                    "name": "paddle"
                                },
                                "property": {
                                    "type": "Identifier",
                                    "name": "draw"
                                }
                            },
                            "arguments": []
                        }
                    },
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "CallExpression",
                            "callee": {
                                "type": "Identifier",
                                "name": "requestAnimationFrame"
                            },
                            "arguments": [
                                {
                                    "type": "Identifier",
                                    "name": "draw"
                                }
                            ]
                        }
                    }
                ]
            },
            "generator": false,
            "expression": false,
            "async": false
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "setInterval"
                },
                "arguments": [
                    {
                        "type": "ArrowFunctionExpression",
                        "id": null,
                        "params": [],
                        "body": {
                            "type": "CallExpression",
                            "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                    "type": "Identifier",
                                    "name": "game"
                                },
                                "property": {
                                    "type": "Identifier",
                                    "name": "update"
                                }
                            },
                            "arguments": []
                        },
                        "generator": false,
                        "expression": true,
                        "async": false
                    },
                    {
                        "type": "Literal",
                        "value": 20,
                        "raw": "20"
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "draw"
                },
                "arguments": []
            }
        }
    ],
    "sourceType": "script"
}

➜  jsob git:(master) ✗ cargo run
   Compiling jsob v0.1.0 (/home/meran/coding/jsob)
    Finished dev [unoptimized + debuginfo] target(s) in 0.42s
     Running `target/debug/jsob`
Using helper at: /home/meran/coding/jsob/helpers/esprima.sh
{
    "type": "Program",
    "body": [
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "canvas"
                    },
                    "init": {
                        "type": "CallExpression",
                        "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                                "type": "Identifier",
                                "name": "document"
                            },
                            "property": {
                                "type": "Identifier",
                                "name": "getElementById"
                            }
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": "canvas",
                                "raw": "\"canvas\""
                            }
                        ]
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "ctx"
                    },
                    "init": {
                        "type": "CallExpression",
                        "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                                "type": "Identifier",
                                "name": "canvas"
                            },
                            "property": {
                                "type": "Identifier",
                                "name": "getContext"
                            }
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": "2d",
                                "raw": "\"2d\""
                            }
                        ]
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "FunctionDeclaration",
            "id": {
                "type": "Identifier",
                "name": "rand"
            },
            "params": [
                {
                    "type": "Identifier",
                    "name": "min"
                },
                {
                    "type": "Identifier",
                    "name": "max"
                }
            ],
            "body": {
                "type": "BlockStatement",
                "body": [
                    {
                        "type": "ReturnStatement",
                        "argument": {
                            "type": "CallExpression",
                            "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                    "type": "Identifier",
                                    "name": "Math"
                                },
                                "property": {
                                    "type": "Identifier",
                                    "name": "floor"
                                }
                            },
                            "arguments": [
                                {
                                    "type": "BinaryExpression",
                                    "operator": "+",
                                    "left": {
                                        "type": "BinaryExpression",
                                        "operator": "*",
                                        "left": {
                                            "type": "CallExpression",
                                            "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                    "type": "Identifier",
                                                    "name": "Math"
                                                },
                                                "property": {
                                                    "type": "Identifier",
                                                    "name": "random"
                                                }
                                            },
                                            "arguments": []
                                        },
                                        "right": {
                                            "type": "Identifier",
                                            "name": "max"
                                        }
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "min"
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "generator": false,
            "expression": false,
            "async": false
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "bh"
                    },
                    "init": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                            "type": "Identifier",
                            "name": "canvas"
                        },
                        "property": {
                            "type": "Identifier",
                            "name": "height"
                        }
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "bw"
                    },
                    "init": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                            "type": "Identifier",
                            "name": "canvas"
                        },
                        "property": {
                            "type": "Identifier",
                            "name": "width"
                        }
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "hFieldCount"
                    },
                    "init": {
                        "type": "Literal",
                        "value": 50,
                        "raw": "50"
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "vFieldCount"
                    },
                    "init": {
                        "type": "Literal",
                        "value": 40,
                        "raw": "40"
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "fieldLength"
                    },
                    "init": {
                        "type": "BinaryExpression",
                        "operator": "/",
                        "left": {
                            "type": "Identifier",
                            "name": "bh"
                        },
                        "right": {
                            "type": "Identifier",
                            "name": "vFieldCount"
                        }
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "FunctionDeclaration",
            "id": {
                "type": "Identifier",
                "name": "fillField"
            },
            "params": [
                {
                    "type": "Identifier",
                    "name": "x"
                },
                {
                    "type": "Identifier",
                    "name": "y"
                },
                {
                    "type": "Identifier",
                    "name": "color"
                }
            ],
            "body": {
                "type": "BlockStatement",
                "body": [
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "CallExpression",
                            "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                    "type": "Identifier",
                                    "name": "ctx"
                                },
                                "property": {
                                    "type": "Identifier",
                                    "name": "beginPath"
                                }
                            },
                            "arguments": []
                        }
                    },
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "CallExpression",
                            "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                    "type": "Identifier",
                                    "name": "ctx"
                                },
                                "property": {
                                    "type": "Identifier",
                                    "name": "rect"
                                }
                            },
                            "arguments": [
                                {
                                    "type": "BinaryExpression",
                                    "operator": "*",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "x"
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "fieldLength"
                                    }
                                },
                                {
                                    "type": "BinaryExpression",
                                    "operator": "*",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "y"
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "fieldLength"
                                    }
                                },
                                {
                                    "type": "Identifier",
                                    "name": "fieldLength"
                                },
                                {
                                    "type": "Identifier",
                                    "name": "fieldLength"
                                }
                            ]
                        }
                    },
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "AssignmentExpression",
                            "operator": "=",
                            "left": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                    "type": "Identifier",
                                    "name": "ctx"
                                },
                                "property": {
                                    "type": "Identifier",
                                    "name": "fillStyle"
                                }
                            },
                            "right": {
                                "type": "Identifier",
                                "name": "color"
                            }
                        }
                    },
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "CallExpression",
                            "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                    "type": "Identifier",
                                    "name": "ctx"
                                },
                                "property": {
                                    "type": "Identifier",
                                    "name": "fill"
                                }
                            },
                            "arguments": []
                        }
                    },
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "CallExpression",
                            "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                    "type": "Identifier",
                                    "name": "ctx"
                                },
                                "property": {
                                    "type": "Identifier",
                                    "name": "closePath"
                                }
                            },
                            "arguments": []
                        }
                    }
                ]
            },
            "generator": false,
            "expression": false,
            "async": false
        },
        {
            "type": "FunctionDeclaration",
            "id": {
                "type": "Identifier",
                "name": "Grid"
            },
            "params": [],
            "body": {
                "type": "BlockStatement",
                "body": [
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "AssignmentExpression",
                            "operator": "=",
                            "left": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                    "type": "ThisExpression"
                                },
                                "property": {
                                    "type": "Identifier",
                                    "name": "draw"
                                }
                            },
                            "right": {
                                "type": "FunctionExpression",
                                "id": null,
                                "params": [],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "ForStatement",
                                            "init": {
                                                "type": "VariableDeclaration",
                                                "declarations": [
                                                    {
                                                        "type": "VariableDeclarator",
                                                        "id": {
                                                            "type": "Identifier",
                                                            "name": "x"
                                                        },
                                                        "init": {
                                                            "type": "Identifier",
                                                            "name": "fieldLength"
                                                        }
                                                    }
                                                ],
                                                "kind": "var"
                                            },
                                            "test": {
                                                "type": "BinaryExpression",
                                                "operator": "<=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "x"
                                                },
                                                "right": {
                                                    "type": "Identifier",
                                                    "name": "bw"
                                                }
                                            },
                                            "update": {
                                                "type": "AssignmentExpression",
                                                "operator": "+=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "x"
                                                },
                                                "right": {
                                                    "type": "Identifier",
                                                    "name": "fieldLength"
                                                }
                                            },
                                            "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "ctx"
                                                                },
                                                                "property": {
                                                                    "type": "Identifier",
                                                                    "name": "moveTo"
                                                                }
                                                            },
                                                            "arguments": [
                                                                {
                                                                    "type": "BinaryExpression",
                                                                    "operator": "+",
                                                                    "left": {
                                                                        "type": "Literal",
                                                                        "value": 0.5,
                                                                        "raw": "0.5"
                                                                    },
                                                                    "right": {
                                                                        "type": "Identifier",
                                                                        "name": "x"
                                                                    }
                                                                },
                                                                {
                                                                    "type": "Literal",
                                                                    "value": 0,
                                                                    "raw": "0"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "ctx"
                                                                },
                                                                "property": {
                                                                    "type": "Identifier",
                                                                    "name": "lineTo"
                                                                }
                                                            },
                                                            "arguments": [
                                                                {
                                                                    "type": "BinaryExpression",
                                                                    "operator": "+",
                                                                    "left": {
                                                                        "type": "Literal",
                                                                        "value": 0.5,
                                                                        "raw": "0.5"
                                                                    },
                                                                    "right": {
                                                                        "type": "Identifier",
                                                                        "name": "x"
                                                                    }
                                                                },
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "bh"
                                                                }
                                                            ]
                                                        }
                                                    }
                                                ]
                                            }
                                        },
                                        {
                                            "type": "ForStatement",
                                            "init": {
                                                "type": "VariableDeclaration",
                                                "declarations": [
                                                    {
                                                        "type": "VariableDeclarator",
                                                        "id": {
                                                            "type": "Identifier",
                                                            "name": "x"
                                                        },
                                                        "init": {
                                                            "type": "Identifier",
                                                            "name": "fieldLength"
                                                        }
                                                    }
                                                ],
                                                "kind": "var"
                                            },
                                            "test": {
                                                "type": "BinaryExpression",
                                                "operator": "<=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "x"
                                                },
                                                "right": {
                                                    "type": "Identifier",
                                                    "name": "bh"
                                                }
                                            },
                                            "update": {
                                                "type": "AssignmentExpression",
                                                "operator": "+=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "x"
                                                },
                                                "right": {
                                                    "type": "Identifier",
                                                    "name": "fieldLength"
                                                }
                                            },
                                            "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "ctx"
                                                                },
                                                                "property": {
                                                                    "type": "Identifier",
                                                                    "name": "moveTo"
                                                                }
                                                            },
                                                            "arguments": [
                                                                {
                                                                    "type": "Literal",
                                                                    "value": 0,
                                                                    "raw": "0"
                                                                },
                                                                {
                                                                    "type": "BinaryExpression",
                                                                    "operator": "+",
                                                                    "left": {
                                                                        "type": "Literal",
                                                                        "value": 0.5,
                                                                        "raw": "0.5"
                                                                    },
                                                                    "right": {
                                                                        "type": "Identifier",
                                                                        "name": "x"
                                                                    }
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "ctx"
                                                                },
                                                                "property": {
                                                                    "type": "Identifier",
                                                                    "name": "lineTo"
                                                                }
                                                            },
                                                            "arguments": [
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "bw"
                                                                },
                                                                {
                                                                    "type": "BinaryExpression",
                                                                    "operator": "+",
                                                                    "left": {
                                                                        "type": "Literal",
                                                                        "value": 0.5,
                                                                        "raw": "0.5"
                                                                    },
                                                                    "right": {
                                                                        "type": "Identifier",
                                                                        "name": "x"
                                                                    }
                                                                }
                                                            ]
                                                        }
                                                    }
                                                ]
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "ctx"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "strokeStyle"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": "grey",
                                                    "raw": "\"grey\""
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "CallExpression",
                                                "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "ctx"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "stroke"
                                                    }
                                                },
                                                "arguments": []
                                            }
                                        }
                                    ]
                                },
                                "generator": false,
                                "expression": false,
                                "async": false
                            }
                        }
                    }
                ]
            },
            "generator": false,
            "expression": false,
            "async": false
        },
        {
            "type": "FunctionDeclaration",
            "id": {
                "type": "Identifier",
                "name": "Apple"
            },
            "params": [],
            "body": {
                "type": "BlockStatement",
                "body": [
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "AssignmentExpression",
                            "operator": "=",
                            "left": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                    "type": "ThisExpression"
                                },
                                "property": {
                                    "type": "Identifier",
                                    "name": "x"
                                }
                            },
                            "right": {
                                "type": "CallExpression",
                                "callee": {
                                    "type": "Identifier",
                                    "name": "rand"
                                },
                                "arguments": [
                                    {
                                        "type": "Literal",
                                        "value": 0,
                                        "raw": "0"
                                    },
                                    {
                                        "type": "BinaryExpression",
                                        "operator": "-",
                                        "left": {
                                            "type": "Identifier",
                                            "name": "hFieldCount"
                                        },
                                        "right": {
                                            "type": "Literal",
                                            "value": 1,
                                            "raw": "1"
                                        }
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "AssignmentExpression",
                            "operator": "=",
                            "left": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                    "type": "ThisExpression"
                                },
                                "property": {
                                    "type": "Identifier",
                                    "name": "y"
                                }
                            },
                            "right": {
                                "type": "CallExpression",
                                "callee": {
                                    "type": "Identifier",
                                    "name": "rand"
                                },
                                "arguments": [
                                    {
                                        "type": "Literal",
                                        "value": 0,
                                        "raw": "0"
                                    },
                                    {
                                        "type": "BinaryExpression",
                                        "operator": "-",
                                        "left": {
                                            "type": "Identifier",
                                            "name": "vFieldCount"
                                        },
                                        "right": {
                                            "type": "Literal",
                                            "value": 1,
                                            "raw": "1"
                                        }
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "AssignmentExpression",
                            "operator": "=",
                            "left": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                    "type": "ThisExpression"
                                },
                                "property": {
                                    "type": "Identifier",
                                    "name": "draw"
                                }
                            },
                            "right": {
                                "type": "FunctionExpression",
                                "id": null,
                                "params": [],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "CallExpression",
                                                "callee": {
                                                    "type": "Identifier",
                                                    "name": "fillField"
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                            "type": "ThisExpression"
                                                        },
                                                        "property": {
                                                            "type": "Identifier",
                                                            "name": "x"
                                                        }
                                                    },
                                                    {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                            "type": "ThisExpression"
                                                        },
                                                        "property": {
                                                            "type": "Identifier",
                                                            "name": "y"
                                                        }
                                                    },
                                                    {
                                                        "type": "Literal",
                                                        "value": "green",
                                                        "raw": "\"green\""
                                                    }
                                                ]
                                            }
                                        }
                                    ]
                                },
                                "generator": false,
                                "expression": false,
                                "async": false
                            }
                        }
                    }
                ]
            },
            "generator": false,
            "expression": false,
            "async": false
        },
        {
            "type": "FunctionDeclaration",
            "id": {
                "type": "Identifier",
                "name": "Snake"
            },
            "params": [],
            "body": {
                "type": "BlockStatement",
                "body": [
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "AssignmentExpression",
                            "operator": "=",
                            "left": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                    "type": "ThisExpression"
                                },
                                "property": {
                                    "type": "Identifier",
                                    "name": "DIRECTIONS"
                                }
                            },
                            "right": {
                                "type": "ObjectExpression",
                                "properties": [
                                    {
                                        "type": "Property",
                                        "key": {
                                            "type": "Identifier",
                                            "name": "UP"
                                        },
                                        "computed": false,
                                        "value": {
                                            "type": "Literal",
                                            "value": 0,
                                            "raw": "0"
                                        },
                                        "kind": "init",
                                        "method": false,
                                        "shorthand": false
                                    },
                                    {
                                        "type": "Property",
                                        "key": {
                                            "type": "Identifier",
                                            "name": "DOWN"
                                        },
                                        "computed": false,
                                        "value": {
                                            "type": "Literal",
                                            "value": 1,
                                            "raw": "1"
                                        },
                                        "kind": "init",
                                        "method": false,
                                        "shorthand": false
                                    },
                                    {
                                        "type": "Property",
                                        "key": {
                                            "type": "Identifier",
                                            "name": "LEFT"
                                        },
                                        "computed": false,
                                        "value": {
                                            "type": "Literal",
                                            "value": 2,
                                            "raw": "2"
                                        },
                                        "kind": "init",
                                        "method": false,
                                        "shorthand": false
                                    },
                                    {
                                        "type": "Property",
                                        "key": {
                                            "type": "Identifier",
                                            "name": "RIGHT"
                                        },
                                        "computed": false,
                                        "value": {
                                            "type": "Literal",
                                            "value": 3,
                                            "raw": "3"
                                        },
                                        "kind": "init",
                                        "method": false,
                                        "shorthand": false
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "AssignmentExpression",
                            "operator": "=",
                            "left": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                    "type": "ThisExpression"
                                },
                                "property": {
                                    "type": "Identifier",
                                    "name": "fields"
                                }
                            },
                            "right": {
                                "type": "ArrayExpression",
                                "elements": [
                                    {
                                        "type": "ObjectExpression",
                                        "properties": [
                                            {
                                                "type": "Property",
                                                "key": {
                                                    "type": "Identifier",
                                                    "name": "x"
                                                },
                                                "computed": false,
                                                "value": {
                                                    "type": "BinaryExpression",
                                                    "operator": "/",
                                                    "left": {
                                                        "type": "Identifier",
                                                        "name": "hFieldCount"
                                                    },
                                                    "right": {
                                                        "type": "Literal",
                                                        "value": 2,
                                                        "raw": "2"
                                                    }
                                                },
                                                "kind": "init",
                                                "method": false,
                                                "shorthand": false
                                            },
                                            {
                                                "type": "Property",
                                                "key": {
                                                    "type": "Identifier",
                                                    "name": "y"
                                                },
                                                "computed": false,
                                                "value": {
                                                    "type": "BinaryExpression",
                                                    "operator": "/",
                                                    "left": {
                                                        "type": "Identifier",
                                                        "name": "vFieldCount"
                                                    },
                                                    "right": {
                                                        "type": "Literal",
                                                        "value": 2,
                                                        "raw": "2"
                                                    }
                                                },
                                                "kind": "init",
                                                "method": false,
                                                "shorthand": false
                                            },
                                            {
                                                "type": "Property",
                                                "key": {
                                                    "type": "Identifier",
                                                    "name": "d"
                                                },
                                                "computed": false,
                                                "value": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                            "type": "ThisExpression"
                                                        },
                                                        "property": {
                                                            "type": "Identifier",
                                                            "name": "DIRECTIONS"
                                                        }
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "LEFT"
                                                    }
                                                },
                                                "kind": "init",
                                                "method": false,
                                                "shorthand": false
                                            }
                                        ]
                                    },
                                    {
                                        "type": "ObjectExpression",
                                        "properties": [
                                            {
                                                "type": "Property",
                                                "key": {
                                                    "type": "Identifier",
                                                    "name": "x"
                                                },
                                                "computed": false,
                                                "value": {
                                                    "type": "BinaryExpression",
                                                    "operator": "+",
                                                    "left": {
                                                        "type": "BinaryExpression",
                                                        "operator": "/",
                                                        "left": {
                                                            "type": "Identifier",
                                                            "name": "hFieldCount"
                                                        },
                                                        "right": {
                                                            "type": "Literal",
                                                            "value": 2,
                                                            "raw": "2"
                                                        }
                                                    },
                                                    "right": {
                                                        "type": "Literal",
                                                        "value": 1,
                                                        "raw": "1"
                                                    }
                                                },
                                                "kind": "init",
                                                "method": false,
                                                "shorthand": false
                                            },
                                            {
                                                "type": "Property",
                                                "key": {
                                                    "type": "Identifier",
                                                    "name": "y"
                                                },
                                                "computed": false,
                                                "value": {
                                                    "type": "BinaryExpression",
                                                    "operator": "/",
                                                    "left": {
                                                        "type": "Identifier",
                                                        "name": "vFieldCount"
                                                    },
                                                    "right": {
                                                        "type": "Literal",
                                                        "value": 2,
                                                        "raw": "2"
                                                    }
                                                },
                                                "kind": "init",
                                                "method": false,
                                                "shorthand": false
                                            },
                                            {
                                                "type": "Property",
                                                "key": {
                                                    "type": "Identifier",
                                                    "name": "d"
                                                },
                                                "computed": false,
                                                "value": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                            "type": "ThisExpression"
                                                        },
                                                        "property": {
                                                            "type": "Identifier",
                                                            "name": "DIRECTIONS"
                                                        }
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "LEFT"
                                                    }
                                                },
                                                "kind": "init",
                                                "method": false,
                                                "shorthand": false
                                            }
                                        ]
                                    },
                                    {
                                        "type": "ObjectExpression",
                                        "properties": [
                                            {
                                                "type": "Property",
                                                "key": {
                                                    "type": "Identifier",
                                                    "name": "x"
                                                },
                                                "computed": false,
                                                "value": {
                                                    "type": "BinaryExpression",
                                                    "operator": "+",
                                                    "left": {
                                                        "type": "BinaryExpression",
                                                        "operator": "/",
                                                        "left": {
                                                            "type": "Identifier",
                                                            "name": "hFieldCount"
                                                        },
                                                        "right": {
                                                            "type": "Literal",
                                                            "value": 2,
                                                            "raw": "2"
                                                        }
                                                    },
                                                    "right": {
                                                        "type": "Literal",
                                                        "value": 2,
                                                        "raw": "2"
                                                    }
                                                },
                                                "kind": "init",
                                                "method": false,
                                                "shorthand": false
                                            },
                                            {
                                                "type": "Property",
                                                "key": {
                                                    "type": "Identifier",
                                                    "name": "y"
                                                },
                                                "computed": false,
                                                "value": {
                                                    "type": "BinaryExpression",
                                                    "operator": "/",
                                                    "left": {
                                                        "type": "Identifier",
                                                        "name": "vFieldCount"
                                                    },
                                                    "right": {
                                                        "type": "Literal",
                                                        "value": 2,
                                                        "raw": "2"
                                                    }
                                                },
                                                "kind": "init",
                                                "method": false,
                                                "shorthand": false
                                            },
                                            {
                                                "type": "Property",
                                                "key": {
                                                    "type": "Identifier",
                                                    "name": "d"
                                                },
                                                "computed": false,
                                                "value": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                            "type": "ThisExpression"
                                                        },
                                                        "property": {
                                                            "type": "Identifier",
                                                            "name": "DIRECTIONS"
                                                        }
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "LEFT"
                                                    }
                                                },
                                                "kind": "init",
                                                "method": false,
                                                "shorthand": false
                                            }
                                        ]
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "AssignmentExpression",
                            "operator": "=",
                            "left": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                    "type": "ThisExpression"
                                },
                                "property": {
                                    "type": "Identifier",
                                    "name": "direction"
                                }
                            },
                            "right": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                        "type": "ThisExpression"
                                    },
                                    "property": {
                                        "type": "Identifier",
                                        "name": "DIRECTIONS"
                                    }
                                },
                                "property": {
                                    "type": "Identifier",
                                    "name": "LEFT"
                                }
                            }
                        }
                    },
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "AssignmentExpression",
                            "operator": "=",
                            "left": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                    "type": "ThisExpression"
                                },
                                "property": {
                                    "type": "Identifier",
                                    "name": "draw"
                                }
                            },
                            "right": {
                                "type": "FunctionExpression",
                                "id": null,
                                "params": [],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "CallExpression",
                                                "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                            "type": "ThisExpression"
                                                        },
                                                        "property": {
                                                            "type": "Identifier",
                                                            "name": "fields"
                                                        }
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "forEach"
                                                    }
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "ArrowFunctionExpression",
                                                        "id": null,
                                                        "params": [
                                                            {
                                                                "type": "Identifier",
                                                                "name": "field"
                                                            }
                                                        ],
                                                        "body": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                                "type": "Identifier",
                                                                "name": "fillField"
                                                            },
                                                            "arguments": [
                                                                {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "field"
                                                                    },
                                                                    "property": {
                                                                        "type": "Identifier",
                                                                        "name": "x"
                                                                    }
                                                                },
                                                                {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "field"
                                                                    },
                                                                    "property": {
                                                                        "type": "Identifier",
                                                                        "name": "y"
                                                                    }
                                                                },
                                                                {
                                                                    "type": "Literal",
                                                                    "value": "orange",
                                                                    "raw": "\"orange\""
                                                                }
                                                            ]
                                                        },
                                                        "generator": false,
                                                        "expression": true,
                                                        "async": false
                                                    }
                                                ]
                                            }
                                        }
                                    ]
                                },
                                "generator": false,
                                "expression": false,
                                "async": false
                            }
                        }
                    },
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "AssignmentExpression",
                            "operator": "=",
                            "left": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                    "type": "ThisExpression"
                                },
                                "property": {
                                    "type": "Identifier",
                                    "name": "update"
                                }
                            },
                            "right": {
                                "type": "FunctionExpression",
                                "id": null,
                                "params": [],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "dx"
                                                    },
                                                    "init": {
                                                        "type": "ArrayExpression",
                                                        "elements": [
                                                            {
                                                                "type": "Literal",
                                                                "value": 0,
                                                                "raw": "0"
                                                            },
                                                            {
                                                                "type": "Literal",
                                                                "value": 0,
                                                                "raw": "0"
                                                            },
                                                            {
                                                                "type": "UnaryExpression",
                                                                "operator": "-",
                                                                "argument": {
                                                                    "type": "Literal",
                                                                    "value": 1,
                                                                    "raw": "1"
                                                                },
                                                                "prefix": true
                                                            },
                                                            {
                                                                "type": "Literal",
                                                                "value": 1,
                                                                "raw": "1"
                                                            }
                                                        ]
                                                    }
                                                }
                                            ],
                                            "kind": "const"
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "dy"
                                                    },
                                                    "init": {
                                                        "type": "ArrayExpression",
                                                        "elements": [
                                                            {
                                                                "type": "UnaryExpression",
                                                                "operator": "-",
                                                                "argument": {
                                                                    "type": "Literal",
                                                                    "value": 1,
                                                                    "raw": "1"
                                                                },
                                                                "prefix": true
                                                            },
                                                            {
                                                                "type": "Literal",
                                                                "value": 1,
                                                                "raw": "1"
                                                            },
                                                            {
                                                                "type": "Literal",
                                                                "value": 0,
                                                                "raw": "0"
                                                            },
                                                            {
                                                                "type": "Literal",
                                                                "value": 0,
                                                                "raw": "0"
                                                            }
                                                        ]
                                                    }
                                                }
                                            ],
                                            "kind": "const"
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "lastDirection"
                                                    },
                                                    "init": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                            "type": "ThisExpression"
                                                        },
                                                        "property": {
                                                            "type": "Identifier",
                                                            "name": "direction"
                                                        }
                                                    }
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "newField"
                                                    },
                                                    "init": {
                                                        "type": "UnaryExpression",
                                                        "operator": "void",
                                                        "argument": {
                                                            "type": "Literal",
                                                            "value": 0,
                                                            "raw": "0"
                                                        },
                                                        "prefix": true
                                                    }
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "fields"
                                                    }
                                                },
                                                "right": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                                "type": "ThisExpression"
                                                            },
                                                            "property": {
                                                                "type": "Identifier",
                                                                "name": "fields"
                                                            }
                                                        },
                                                        "property": {
                                                            "type": "Identifier",
                                                            "name": "map"
                                                        }
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "ArrowFunctionExpression",
                                                            "id": null,
                                                            "params": [
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "field"
                                                                }
                                                            ],
                                                            "body": {
                                                                "type": "BlockStatement",
                                                                "body": [
                                                                    {
                                                                        "type": "IfStatement",
                                                                        "test": {
                                                                            "type": "BinaryExpression",
                                                                            "operator": "!=",
                                                                            "left": {
                                                                                "type": "MemberExpression",
                                                                                "computed": false,
                                                                                "object": {
                                                                                    "type": "Identifier",
                                                                                    "name": "field"
                                                                                },
                                                                                "property": {
                                                                                    "type": "Identifier",
                                                                                    "name": "d"
                                                                                }
                                                                            },
                                                                            "right": {
                                                                                "type": "Identifier",
                                                                                "name": "lastDirection"
                                                                            }
                                                                        },
                                                                        "consequent": {
                                                                            "type": "BlockStatement",
                                                                            "body": [
                                                                                {
                                                                                    "type": "ExpressionStatement",
                                                                                    "expression": {
                                                                                        "type": "AssignmentExpression",
                                                                                        "operator": "=",
                                                                                        "left": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": false,
                                                                                            "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "field"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Identifier",
                                                                                                "name": "d"
                                                                                            }
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "ArrayExpression",
                                                                                                "elements": [
                                                                                                    {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "lastDirection"
                                                                                                    },
                                                                                                    {
                                                                                                        "type": "AssignmentExpression",
                                                                                                        "operator": "=",
                                                                                                        "left": {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "lastDirection"
                                                                                                        },
                                                                                                        "right": {
                                                                                                            "type": "MemberExpression",
                                                                                                            "computed": false,
                                                                                                            "object": {
                                                                                                                "type": "Identifier",
                                                                                                                "name": "field"
                                                                                                            },
                                                                                                            "property": {
                                                                                                                "type": "Identifier",
                                                                                                                "name": "d"
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                ]
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Literal",
                                                                                                "value": 0,
                                                                                                "raw": "0"
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            ]
                                                                        },
                                                                        "alternate": null
                                                                    },
                                                                    {
                                                                        "type": "VariableDeclaration",
                                                                        "declarations": [
                                                                            {
                                                                                "type": "VariableDeclarator",
                                                                                "id": {
                                                                                    "type": "Identifier",
                                                                                    "name": "x"
                                                                                },
                                                                                "init": {
                                                                                    "type": "BinaryExpression",
                                                                                    "operator": "+",
                                                                                    "left": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": false,
                                                                                        "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "field"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Identifier",
                                                                                            "name": "x"
                                                                                        }
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "dx"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": false,
                                                                                            "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "field"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Identifier",
                                                                                                "name": "d"
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        ],
                                                                        "kind": "var"
                                                                    },
                                                                    {
                                                                        "type": "VariableDeclaration",
                                                                        "declarations": [
                                                                            {
                                                                                "type": "VariableDeclarator",
                                                                                "id": {
                                                                                    "type": "Identifier",
                                                                                    "name": "y"
                                                                                },
                                                                                "init": {
                                                                                    "type": "BinaryExpression",
                                                                                    "operator": "+",
                                                                                    "left": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": false,
                                                                                        "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "field"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Identifier",
                                                                                            "name": "y"
                                                                                        }
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "dy"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": false,
                                                                                            "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "field"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Identifier",
                                                                                                "name": "d"
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        ],
                                                                        "kind": "var"
                                                                    },
                                                                    {
                                                                        "type": "IfStatement",
                                                                        "test": {
                                                                            "type": "LogicalExpression",
                                                                            "operator": "&&",
                                                                            "left": {
                                                                                "type": "BinaryExpression",
                                                                                "operator": "==",
                                                                                "left": {
                                                                                    "type": "Identifier",
                                                                                    "name": "x"
                                                                                },
                                                                                "right": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": false,
                                                                                    "object": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": false,
                                                                                        "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "game"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Identifier",
                                                                                            "name": "apple"
                                                                                        }
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Identifier",
                                                                                        "name": "x"
                                                                                    }
                                                                                }
                                                                            },
                                                                            "right": {
                                                                                "type": "BinaryExpression",
                                                                                "operator": "==",
                                                                                "left": {
                                                                                    "type": "Identifier",
                                                                                    "name": "y"
                                                                                },
                                                                                "right": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": false,
                                                                                    "object": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": false,
                                                                                        "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "game"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Identifier",
                                                                                            "name": "apple"
                                                                                        }
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Identifier",
                                                                                        "name": "y"
                                                                                    }
                                                                                }
                                                                            }
                                                                        },
                                                                        "consequent": {
                                                                            "type": "BlockStatement",
                                                                            "body": [
                                                                                {
                                                                                    "type": "ExpressionStatement",
                                                                                    "expression": {
                                                                                        "type": "AssignmentExpression",
                                                                                        "operator": "=",
                                                                                        "left": {
                                                                                            "type": "Identifier",
                                                                                            "name": "newField"
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "CallExpression",
                                                                                            "callee": {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": false,
                                                                                                "object": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "Object"
                                                                                                },
                                                                                                "property": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "assign"
                                                                                                }
                                                                                            },
                                                                                            "arguments": [
                                                                                                {
                                                                                                    "type": "ObjectExpression",
                                                                                                    "properties": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "MemberExpression",
                                                                                                    "computed": true,
                                                                                                    "object": {
                                                                                                        "type": "MemberExpression",
                                                                                                        "computed": false,
                                                                                                        "object": {
                                                                                                            "type": "ThisExpression"
                                                                                                        },
                                                                                                        "property": {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "fields"
                                                                                                        }
                                                                                                    },
                                                                                                    "property": {
                                                                                                        "type": "BinaryExpression",
                                                                                                        "operator": "-",
                                                                                                        "left": {
                                                                                                            "type": "MemberExpression",
                                                                                                            "computed": false,
                                                                                                            "object": {
                                                                                                                "type": "MemberExpression",
                                                                                                                "computed": false,
                                                                                                                "object": {
                                                                                                                    "type": "ThisExpression"
                                                                                                                },
                                                                                                                "property": {
                                                                                                                    "type": "Identifier",
                                                                                                                    "name": "fields"
                                                                                                                }
                                                                                                            },
                                                                                                            "property": {
                                                                                                                "type": "Identifier",
                                                                                                                "name": "length"
                                                                                                            }
                                                                                                        },
                                                                                                        "right": {
                                                                                                            "type": "Literal",
                                                                                                            "value": 1,
                                                                                                            "raw": "1"
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "type": "ExpressionStatement",
                                                                                    "expression": {
                                                                                        "type": "AssignmentExpression",
                                                                                        "operator": "=",
                                                                                        "left": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": false,
                                                                                            "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "game"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Identifier",
                                                                                                "name": "apple"
                                                                                            }
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "NewExpression",
                                                                                            "callee": {
                                                                                                "type": "Identifier",
                                                                                                "name": "Apple"
                                                                                            },
                                                                                            "arguments": []
                                                                                        }
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "type": "ExpressionStatement",
                                                                                    "expression": {
                                                                                        "type": "UpdateExpression",
                                                                                        "operator": "++",
                                                                                        "argument": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": false,
                                                                                            "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "game"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Identifier",
                                                                                                "name": "score"
                                                                                            }
                                                                                        },
                                                                                        "prefix": false
                                                                                    }
                                                                                }
                                                                            ]
                                                                        },
                                                                        "alternate": null
                                                                    },
                                                                    {
                                                                        "type": "VariableDeclaration",
                                                                        "declarations": [
                                                                            {
                                                                                "type": "VariableDeclarator",
                                                                                "id": {
                                                                                    "type": "Identifier",
                                                                                    "name": "collisionCounter"
                                                                                },
                                                                                "init": {
                                                                                    "type": "Literal",
                                                                                    "value": 0,
                                                                                    "raw": "0"
                                                                                }
                                                                            }
                                                                        ],
                                                                        "kind": "let"
                                                                    },
                                                                    {
                                                                        "type": "ExpressionStatement",
                                                                        "expression": {
                                                                            "type": "CallExpression",
                                                                            "callee": {
                                                                                "type": "MemberExpression",
                                                                                "computed": false,
                                                                                "object": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": false,
                                                                                    "object": {
                                                                                        "type": "ThisExpression"
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Identifier",
                                                                                        "name": "fields"
                                                                                    }
                                                                                },
                                                                                "property": {
                                                                                    "type": "Identifier",
                                                                                    "name": "forEach"
                                                                                }
                                                                            },
                                                                            "arguments": [
                                                                                {
                                                                                    "type": "ArrowFunctionExpression",
                                                                                    "id": null,
                                                                                    "params": [
                                                                                        {
                                                                                            "type": "Identifier",
                                                                                            "name": "collisionTestField"
                                                                                        }
                                                                                    ],
                                                                                    "body": {
                                                                                        "type": "BlockStatement",
                                                                                        "body": [
                                                                                            {
                                                                                                "type": "ExpressionStatement",
                                                                                                "expression": {
                                                                                                    "type": "LogicalExpression",
                                                                                                    "operator": "&&",
                                                                                                    "left": {
                                                                                                        "type": "LogicalExpression",
                                                                                                        "operator": "&&",
                                                                                                        "left": {
                                                                                                            "type": "BinaryExpression",
                                                                                                            "operator": "===",
                                                                                                            "left": {
                                                                                                                "type": "MemberExpression",
                                                                                                                "computed": false,
                                                                                                                "object": {
                                                                                                                    "type": "Identifier",
                                                                                                                    "name": "collisionTestField"
                                                                                                                },
                                                                                                                "property": {
                                                                                                                    "type": "Identifier",
                                                                                                                    "name": "x"
                                                                                                                }
                                                                                                            },
                                                                                                            "right": {
                                                                                                                "type": "MemberExpression",
                                                                                                                "computed": false,
                                                                                                                "object": {
                                                                                                                    "type": "Identifier",
                                                                                                                    "name": "field"
                                                                                                                },
                                                                                                                "property": {
                                                                                                                    "type": "Identifier",
                                                                                                                    "name": "x"
                                                                                                                }
                                                                                                            }
                                                                                                        },
                                                                                                        "right": {
                                                                                                            "type": "BinaryExpression",
                                                                                                            "operator": "===",
                                                                                                            "left": {
                                                                                                                "type": "MemberExpression",
                                                                                                                "computed": false,
                                                                                                                "object": {
                                                                                                                    "type": "Identifier",
                                                                                                                    "name": "collisionTestField"
                                                                                                                },
                                                                                                                "property": {
                                                                                                                    "type": "Identifier",
                                                                                                                    "name": "y"
                                                                                                                }
                                                                                                            },
                                                                                                            "right": {
                                                                                                                "type": "MemberExpression",
                                                                                                                "computed": false,
                                                                                                                "object": {
                                                                                                                    "type": "Identifier",
                                                                                                                    "name": "field"
                                                                                                                },
                                                                                                                "property": {
                                                                                                                    "type": "Identifier",
                                                                                                                    "name": "y"
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    },
                                                                                                    "right": {
                                                                                                        "type": "UpdateExpression",
                                                                                                        "operator": "++",
                                                                                                        "argument": {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "collisionCounter"
                                                                                                        },
                                                                                                        "prefix": false
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        ]
                                                                                    },
                                                                                    "generator": false,
                                                                                    "expression": false,
                                                                                    "async": false
                                                                                }
                                                                            ]
                                                                        }
                                                                    },
                                                                    {
                                                                        "type": "IfStatement",
                                                                        "test": {
                                                                            "type": "LogicalExpression",
                                                                            "operator": "||",
                                                                            "left": {
                                                                                "type": "LogicalExpression",
                                                                                "operator": "||",
                                                                                "left": {
                                                                                    "type": "LogicalExpression",
                                                                                    "operator": "||",
                                                                                    "left": {
                                                                                        "type": "LogicalExpression",
                                                                                        "operator": "||",
                                                                                        "left": {
                                                                                            "type": "BinaryExpression",
                                                                                            "operator": "<",
                                                                                            "left": {
                                                                                                "type": "Identifier",
                                                                                                "name": "x"
                                                                                            },
                                                                                            "right": {
                                                                                                "type": "Literal",
                                                                                                "value": 0,
                                                                                                "raw": "0"
                                                                                            }
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "BinaryExpression",
                                                                                            "operator": ">=",
                                                                                            "left": {
                                                                                                "type": "Identifier",
                                                                                                "name": "x"
                                                                                            },
                                                                                            "right": {
                                                                                                "type": "Identifier",
                                                                                                "name": "hFieldCount"
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "BinaryExpression",
                                                                                        "operator": "<",
                                                                                        "left": {
                                                                                            "type": "Identifier",
                                                                                            "name": "y"
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "Literal",
                                                                                            "value": 0,
                                                                                            "raw": "0"
                                                                                        }
                                                                                    }
                                                                                },
                                                                                "right": {
                                                                                    "type": "BinaryExpression",
                                                                                    "operator": ">=",
                                                                                    "left": {
                                                                                        "type": "Identifier",
                                                                                        "name": "y"
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "Identifier",
                                                                                        "name": "vFieldCount"
                                                                                    }
                                                                                }
                                                                            },
                                                                            "right": {
                                                                                "type": "BinaryExpression",
                                                                                "operator": ">=",
                                                                                "left": {
                                                                                    "type": "Identifier",
                                                                                    "name": "collisionCounter"
                                                                                },
                                                                                "right": {
                                                                                    "type": "Literal",
                                                                                    "value": 2,
                                                                                    "raw": "2"
                                                                                }
                                                                            }
                                                                        },
                                                                        "consequent": {
                                                                            "type": "BlockStatement",
                                                                            "body": [
                                                                                {
                                                                                    "type": "ExpressionStatement",
                                                                                    "expression": {
                                                                                        "type": "CallExpression",
                                                                                        "callee": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": false,
                                                                                            "object": {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": false,
                                                                                                "object": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "document"
                                                                                                },
                                                                                                "property": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "location"
                                                                                                }
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Identifier",
                                                                                                "name": "reload"
                                                                                            }
                                                                                        },
                                                                                        "arguments": []
                                                                                    }
                                                                                }
                                                                            ]
                                                                        },
                                                                        "alternate": null
                                                                    },
                                                                    {
                                                                        "type": "ReturnStatement",
                                                                        "argument": {
                                                                            "type": "ObjectExpression",
                                                                            "properties": [
                                                                                {
                                                                                    "type": "Property",
                                                                                    "key": {
                                                                                        "type": "Identifier",
                                                                                        "name": "x"
                                                                                    },
                                                                                    "computed": false,
                                                                                    "value": {
                                                                                        "type": "Identifier",
                                                                                        "name": "x"
                                                                                    },
                                                                                    "kind": "init",
                                                                                    "method": false,
                                                                                    "shorthand": true
                                                                                },
                                                                                {
                                                                                    "type": "Property",
                                                                                    "key": {
                                                                                        "type": "Identifier",
                                                                                        "name": "y"
                                                                                    },
                                                                                    "computed": false,
                                                                                    "value": {
                                                                                        "type": "Identifier",
                                                                                        "name": "y"
                                                                                    },
                                                                                    "kind": "init",
                                                                                    "method": false,
                                                                                    "shorthand": true
                                                                                },
                                                                                {
                                                                                    "type": "Property",
                                                                                    "key": {
                                                                                        "type": "Identifier",
                                                                                        "name": "d"
                                                                                    },
                                                                                    "computed": false,
                                                                                    "value": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": false,
                                                                                        "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "field"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Identifier",
                                                                                            "name": "d"
                                                                                        }
                                                                                    },
                                                                                    "kind": "init",
                                                                                    "method": false,
                                                                                    "shorthand": false
                                                                                }
                                                                            ]
                                                                        }
                                                                    }
                                                                ]
                                                            },
                                                            "generator": false,
                                                            "expression": false,
                                                            "async": false
                                                        }
                                                    ]
                                                }
                                            }
                                        },
                                        {
                                            "type": "IfStatement",
                                            "test": {
                                                "type": "Identifier",
                                                "name": "newField"
                                            },
                                            "consequent": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                        "type": "ThisExpression"
                                                                    },
                                                                    "property": {
                                                                        "type": "Identifier",
                                                                        "name": "fields"
                                                                    }
                                                                },
                                                                "property": {
                                                                    "type": "Identifier",
                                                                    "name": "push"
                                                                }
                                                            },
                                                            "arguments": [
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "newField"
                                                                }
                                                            ]
                                                        }
                                                    }
                                                ]
                                            },
                                            "alternate": null
                                        }
                                    ]
                                },
                                "generator": false,
                                "expression": false,
                                "async": false
                            }
                        }
                    }
                ]
            },
            "generator": false,
            "expression": false,
            "async": false
        },
        {
            "type": "FunctionDeclaration",
            "id": {
                "type": "Identifier",
                "name": "Game"
            },
            "params": [],
            "body": {
                "type": "BlockStatement",
                "body": [
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "AssignmentExpression",
                            "operator": "=",
                            "left": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                    "type": "ThisExpression"
                                },
                                "property": {
                                    "type": "Identifier",
                                    "name": "score"
                                }
                            },
                            "right": {
                                "type": "Literal",
                                "value": 0,
                                "raw": "0"
                            }
                        }
                    },
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "AssignmentExpression",
                            "operator": "=",
                            "left": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                    "type": "ThisExpression"
                                },
                                "property": {
                                    "type": "Identifier",
                                    "name": "snake"
                                }
                            },
                            "right": {
                                "type": "NewExpression",
                                "callee": {
                                    "type": "Identifier",
                                    "name": "Snake"
                                },
                                "arguments": []
                            }
                        }
                    },
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "AssignmentExpression",
                            "operator": "=",
                            "left": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                    "type": "ThisExpression"
                                },
                                "property": {
                                    "type": "Identifier",
                                    "name": "apple"
                                }
                            },
                            "right": {
                                "type": "NewExpression",
                                "callee": {
                                    "type": "Identifier",
                                    "name": "Apple"
                                },
                                "arguments": []
                            }
                        }
                    },
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "AssignmentExpression",
                            "operator": "=",
                            "left": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                    "type": "ThisExpression"
                                },
                                "property": {
                                    "type": "Identifier",
                                    "name": "draw"
                                }
                            },
                            "right": {
                                "type": "FunctionExpression",
                                "id": null,
                                "params": [],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "CallExpression",
                                                "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                            "type": "ThisExpression"
                                                        },
                                                        "property": {
                                                            "type": "Identifier",
                                                            "name": "snake"
                                                        }
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "draw"
                                                    }
                                                },
                                                "arguments": []
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "CallExpression",
                                                "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                            "type": "ThisExpression"
                                                        },
                                                        "property": {
                                                            "type": "Identifier",
                                                            "name": "apple"
                                                        }
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "draw"
                                                    }
                                                },
                                                "arguments": []
                                            }
                                        }
                                    ]
                                },
                                "generator": false,
                                "expression": false,
                                "async": false
                            }
                        }
                    },
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "AssignmentExpression",
                            "operator": "=",
                            "left": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                    "type": "ThisExpression"
                                },
                                "property": {
                                    "type": "Identifier",
                                    "name": "update"
                                }
                            },
                            "right": {
                                "type": "FunctionExpression",
                                "id": null,
                                "params": [],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "CallExpression",
                                                "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                            "type": "ThisExpression"
                                                        },
                                                        "property": {
                                                            "type": "Identifier",
                                                            "name": "snake"
                                                        }
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "update"
                                                    }
                                                },
                                                "arguments": []
                                            }
                                        }
                                    ]
                                },
                                "generator": false,
                                "expression": false,
                                "async": false
                            }
                        }
                    }
                ]
            },
            "generator": false,
            "expression": false,
            "async": false
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                        "type": "Identifier",
                        "name": "document"
                    },
                    "property": {
                        "type": "Identifier",
                        "name": "addEventListener"
                    }
                },
                "arguments": [
                    {
                        "type": "Literal",
                        "value": "keydown",
                        "raw": "\"keydown\""
                    },
                    {
                        "type": "FunctionExpression",
                        "id": null,
                        "params": [
                            {
                                "type": "Identifier",
                                "name": "event"
                            }
                        ],
                        "body": {
                            "type": "BlockStatement",
                            "body": [
                                {
                                    "type": "VariableDeclaration",
                                    "declarations": [
                                        {
                                            "type": "VariableDeclarator",
                                            "id": {
                                                "type": "Identifier",
                                                "name": "directionsTable"
                                            },
                                            "init": {
                                                "type": "ObjectExpression",
                                                "properties": [
                                                    {
                                                        "type": "Property",
                                                        "key": {
                                                            "type": "Identifier",
                                                            "name": "ArrowLeft"
                                                        },
                                                        "computed": false,
                                                        "value": {
                                                            "type": "ArrayExpression",
                                                            "elements": [
                                                                {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                            "type": "MemberExpression",
                                                                            "computed": false,
                                                                            "object": {
                                                                                "type": "Identifier",
                                                                                "name": "game"
                                                                            },
                                                                            "property": {
                                                                                "type": "Identifier",
                                                                                "name": "snake"
                                                                            }
                                                                        },
                                                                        "property": {
                                                                            "type": "Identifier",
                                                                            "name": "DIRECTIONS"
                                                                        }
                                                                    },
                                                                    "property": {
                                                                        "type": "Identifier",
                                                                        "name": "LEFT"
                                                                    }
                                                                },
                                                                {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                            "type": "MemberExpression",
                                                                            "computed": false,
                                                                            "object": {
                                                                                "type": "Identifier",
                                                                                "name": "game"
                                                                            },
                                                                            "property": {
                                                                                "type": "Identifier",
                                                                                "name": "snake"
                                                                            }
                                                                        },
                                                                        "property": {
                                                                            "type": "Identifier",
                                                                            "name": "DIRECTIONS"
                                                                        }
                                                                    },
                                                                    "property": {
                                                                        "type": "Identifier",
                                                                        "name": "RIGHT"
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "kind": "init",
                                                        "method": false,
                                                        "shorthand": false
                                                    },
                                                    {
                                                        "type": "Property",
                                                        "key": {
                                                            "type": "Identifier",
                                                            "name": "ArrowRight"
                                                        },
                                                        "computed": false,
                                                        "value": {
                                                            "type": "ArrayExpression",
                                                            "elements": [
                                                                {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                            "type": "MemberExpression",
                                                                            "computed": false,
                                                                            "object": {
                                                                                "type": "Identifier",
                                                                                "name": "game"
                                                                            },
                                                                            "property": {
                                                                                "type": "Identifier",
                                                                                "name": "snake"
                                                                            }
                                                                        },
                                                                        "property": {
                                                                            "type": "Identifier",
                                                                            "name": "DIRECTIONS"
                                                                        }
                                                                    },
                                                                    "property": {
                                                                        "type": "Identifier",
                                                                        "name": "RIGHT"
                                                                    }
                                                                },
                                                                {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                            "type": "MemberExpression",
                                                                            "computed": false,
                                                                            "object": {
                                                                                "type": "Identifier",
                                                                                "name": "game"
                                                                            },
                                                                            "property": {
                                                                                "type": "Identifier",
                                                                                "name": "snake"
                                                                            }
                                                                        },
                                                                        "property": {
                                                                            "type": "Identifier",
                                                                            "name": "DIRECTIONS"
                                                                        }
                                                                    },
                                                                    "property": {
                                                                        "type": "Identifier",
                                                                        "name": "LEFT"
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "kind": "init",
                                                        "method": false,
                                                        "shorthand": false
                                                    },
                                                    {
                                                        "type": "Property",
                                                        "key": {
                                                            "type": "Identifier",
                                                            "name": "ArrowUp"
                                                        },
                                                        "computed": false,
                                                        "value": {
                                                            "type": "ArrayExpression",
                                                            "elements": [
                                                                {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                            "type": "MemberExpression",
                                                                            "computed": false,
                                                                            "object": {
                                                                                "type": "Identifier",
                                                                                "name": "game"
                                                                            },
                                                                            "property": {
                                                                                "type": "Identifier",
                                                                                "name": "snake"
                                                                            }
                                                                        },
                                                                        "property": {
                                                                            "type": "Identifier",
                                                                            "name": "DIRECTIONS"
                                                                        }
                                                                    },
                                                                    "property": {
                                                                        "type": "Identifier",
                                                                        "name": "UP"
                                                                    }
                                                                },
                                                                {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                            "type": "MemberExpression",
                                                                            "computed": false,
                                                                            "object": {
                                                                                "type": "Identifier",
                                                                                "name": "game"
                                                                            },
                                                                            "property": {
                                                                                "type": "Identifier",
                                                                                "name": "snake"
                                                                            }
                                                                        },
                                                                        "property": {
                                                                            "type": "Identifier",
                                                                            "name": "DIRECTIONS"
                                                                        }
                                                                    },
                                                                    "property": {
                                                                        "type": "Identifier",
                                                                        "name": "DOWN"
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "kind": "init",
                                                        "method": false,
                                                        "shorthand": false
                                                    },
                                                    {
                                                        "type": "Property",
                                                        "key": {
                                                            "type": "Identifier",
                                                            "name": "ArrowDown"
                                                        },
                                                        "computed": false,
                                                        "value": {
                                                            "type": "ArrayExpression",
                                                            "elements": [
                                                                {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                            "type": "MemberExpression",
                                                                            "computed": false,
                                                                            "object": {
                                                                                "type": "Identifier",
                                                                                "name": "game"
                                                                            },
                                                                            "property": {
                                                                                "type": "Identifier",
                                                                                "name": "snake"
                                                                            }
                                                                        },
                                                                        "property": {
                                                                            "type": "Identifier",
                                                                            "name": "DIRECTIONS"
                                                                        }
                                                                    },
                                                                    "property": {
                                                                        "type": "Identifier",
                                                                        "name": "DOWN"
                                                                    }
                                                                },
                                                                {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                            "type": "MemberExpression",
                                                                            "computed": false,
                                                                            "object": {
                                                                                "type": "Identifier",
                                                                                "name": "game"
                                                                            },
                                                                            "property": {
                                                                                "type": "Identifier",
                                                                                "name": "snake"
                                                                            }
                                                                        },
                                                                        "property": {
                                                                            "type": "Identifier",
                                                                            "name": "DIRECTIONS"
                                                                        }
                                                                    },
                                                                    "property": {
                                                                        "type": "Identifier",
                                                                        "name": "UP"
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "kind": "init",
                                                        "method": false,
                                                        "shorthand": false
                                                    }
                                                ]
                                            }
                                        }
                                    ],
                                    "kind": "const"
                                },
                                {
                                    "type": "VariableDeclaration",
                                    "declarations": [
                                        {
                                            "type": "VariableDeclarator",
                                            "id": {
                                                "type": "Identifier",
                                                "name": "direction"
                                            },
                                            "init": {
                                                "type": "MemberExpression",
                                                "computed": true,
                                                "object": {
                                                    "type": "Identifier",
                                                    "name": "directionsTable"
                                                },
                                                "property": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "event"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "key"
                                                    }
                                                }
                                            }
                                        }
                                    ],
                                    "kind": "var"
                                },
                                {
                                    "type": "IfStatement",
                                    "test": {
                                        "type": "LogicalExpression",
                                        "operator": "&&",
                                        "left": {
                                            "type": "BinaryExpression",
                                            "operator": "!==",
                                            "left": {
                                                "type": "Identifier",
                                                "name": "direction"
                                            },
                                            "right": {
                                                "type": "UnaryExpression",
                                                "operator": "void",
                                                "argument": {
                                                    "type": "Literal",
                                                    "value": 0,
                                                    "raw": "0"
                                                },
                                                "prefix": true
                                            }
                                        },
                                        "right": {
                                            "type": "BinaryExpression",
                                            "operator": "!=",
                                            "left": {
                                                "type": "MemberExpression",
                                                "computed": true,
                                                "object": {
                                                    "type": "Identifier",
                                                    "name": "direction"
                                                },
                                                "property": {
                                                    "type": "Literal",
                                                    "value": 1,
                                                    "raw": "1"
                                                }
                                            },
                                            "right": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "game"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "snake"
                                                    }
                                                },
                                                "property": {
                                                    "type": "Identifier",
                                                    "name": "direction"
                                                }
                                            }
                                        }
                                    },
                                    "consequent": {
                                        "type": "BlockStatement",
                                        "body": [
                                            {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                    "type": "AssignmentExpression",
                                                    "operator": "=",
                                                    "left": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                                "type": "Identifier",
                                                                "name": "game"
                                                            },
                                                            "property": {
                                                                "type": "Identifier",
                                                                "name": "snake"
                                                            }
                                                        },
                                                        "property": {
                                                            "type": "Identifier",
                                                            "name": "direction"
                                                        }
                                                    },
                                                    "right": {
                                                        "type": "MemberExpression",
                                                        "computed": true,
                                                        "object": {
                                                            "type": "Identifier",
                                                            "name": "direction"
                                                        },
                                                        "property": {
                                                            "type": "Literal",
                                                            "value": 0,
                                                            "raw": "0"
                                                        }
                                                    }
                                                }
                                            }
                                        ]
                                    },
                                    "alternate": null
                                }
                            ]
                        },
                        "generator": false,
                        "expression": false,
                        "async": false
                    },
                    {
                        "type": "Literal",
                        "value": false,
                        "raw": "false"
                    }
                ]
            }
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "grid"
                    },
                    "init": {
                        "type": "NewExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "Grid"
                        },
                        "arguments": []
                    }
                }
            ],
            "kind": "const"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "game"
                    },
                    "init": {
                        "type": "NewExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "Game"
                        },
                        "arguments": []
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "FunctionDeclaration",
            "id": {
                "type": "Identifier",
                "name": "draw"
            },
            "params": [],
            "body": {
                "type": "BlockStatement",
                "body": [
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "CallExpression",
                            "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                    "type": "Identifier",
                                    "name": "ctx"
                                },
                                "property": {
                                    "type": "Identifier",
                                    "name": "clearRect"
                                }
                            },
                            "arguments": [
                                {
                                    "type": "Literal",
                                    "value": 0,
                                    "raw": "0"
                                },
                                {
                                    "type": "Literal",
                                    "value": 0,
                                    "raw": "0"
                                },
                                {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                        "type": "Identifier",
                                        "name": "canvas"
                                    },
                                    "property": {
                                        "type": "Identifier",
                                        "name": "width"
                                    }
                                },
                                {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                        "type": "Identifier",
                                        "name": "canvas"
                                    },
                                    "property": {
                                        "type": "Identifier",
                                        "name": "height"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "CallExpression",
                            "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                    "type": "Identifier",
                                    "name": "grid"
                                },
                                "property": {
                                    "type": "Identifier",
                                    "name": "draw"
                                }
                            },
                            "arguments": []
                        }
                    },
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "CallExpression",
                            "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                    "type": "Identifier",
                                    "name": "game"
                                },
                                "property": {
                                    "type": "Identifier",
                                    "name": "draw"
                                }
                            },
                            "arguments": []
                        }
                    },
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "CallExpression",
                            "callee": {
                                "type": "Identifier",
                                "name": "requestAnimationFrame"
                            },
                            "arguments": [
                                {
                                    "type": "Identifier",
                                    "name": "draw"
                                }
                            ]
                        }
                    }
                ]
            },
            "generator": false,
            "expression": false,
            "async": false
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "draw"
                },
                "arguments": []
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "setInterval"
                },
                "arguments": [
                    {
                        "type": "ArrowFunctionExpression",
                        "id": null,
                        "params": [],
                        "body": {
                            "type": "CallExpression",
                            "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                    "type": "Identifier",
                                    "name": "game"
                                },
                                "property": {
                                    "type": "Identifier",
                                    "name": "update"
                                }
                            },
                            "arguments": []
                        },
                        "generator": false,
                        "expression": true,
                        "async": false
                    },
                    {
                        "type": "Literal",
                        "value": 120,
                        "raw": "120"
                    }
                ]
            }
        }
    ],
    "sourceType": "script"
}
